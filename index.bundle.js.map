{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://elsciUi/webpack/universalModuleDefinition","webpack://elsciUi/webpack/bootstrap","webpack://elsciUi/webpack/runtime/define property getters","webpack://elsciUi/webpack/runtime/hasOwnProperty shorthand","webpack://elsciUi/webpack/runtime/make namespace object","webpack://elsciUi/./src/TextInput/TextInputValidityState.js","webpack://elsciUi/./src/utils.js","webpack://elsciUi/./src/TextInput/TextInput.js","webpack://elsciUi/./src/ListBox/ListBox.js","webpack://elsciUi/./src/TypeAheadInput/TypeAheadInput.js","webpack://elsciUi/./src/SelectInput/SelectInput.js","webpack://elsciUi/./src/EditText/EditText.js","webpack://elsciUi/./src/SnackBar/SnackBar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elsciUi\"] = factory();\n\telse\n\t\troot[\"elsciUi\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class TextInputValidityState {\n\t#textInput;\n\t#inputElement;\n\t#isValid;\n\t#errorMessage;\n\n\tconstructor(textInput) {\n\t\tthis.#textInput = textInput\n\t\tthis.#inputElement = textInput.querySelector('input');\n\t\tthis.#isValid = true;\n\t\tthis.#errorMessage = \"\";\n\t}\n\n\tget isValid() {\n\t\treturn this.#isValid;\n\t}\n\n\tget errorMessage() {\n\t\treturn this.#errorMessage;\n\t}\n\n\tcheckValidity() {\n\t\t// reset custom validity\n\t\tthis.setCustomValidity(\"\");\n\t\tthis.#inputElement.checkValidity();\n\t\t// if the input element is valid, then check custom validity\n\t\tlet validity = this.#inputElement.validity;\n\t\tif (validity.valid) {\n\t\t\tvalidity = this.#getCustomValidity();\n\t\t}\n\t\tthis.#isValid = validity.valid;\n\t\tthis.#errorMessage = this.#getValidationMessage(validity);\n\t\treturn this.isValid;\n\t}\n\n\tsetCustomValidity(message) {\n\t\tthis.#inputElement.setCustomValidity(message);\n\t\tthis.#isValid = this.#inputElement.validity.valid;\n\t\tthis.#errorMessage = message;\n\t}\n\n\t/**\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n\t * Here we add our own validation steps, and update the validity state properties.\n\t *  - valueMissing: if the input element is required and the trimmed text is empty (contains only whitespaces).\n\t *  - rangeUnderflow: if the input element is a number and the value is less than the min attribute.\n\t *  - rangeOverflow: if the input element is a number and the value is greater than the max attribute.\n\t */\n\t#getCustomValidity() {\n\t\tconst {badInput, customError, patternMismatch, typeMismatch, valid, rangeOverflow, rangeUnderflow, tooLong,\n\t\t\ttooShort, valueMissing, stepMismatch} = this.#inputElement.validity;\n\t\tconst cv = Object.assign({},\n\t\t\t{badInput, customError, patternMismatch, typeMismatch, valid, rangeOverflow, rangeUnderflow, tooLong,\n\t\t\t\ttooShort, valueMissing, stepMismatch},\n\t\t\tthis.#isBlanknessConstraintViolated(),\n\t\t\tthis.#isRangeConstraintViolated()\n\t\t);\n\t\tcv.valid = !cv.valueMissing && !cv.rangeUnderflow && !cv.rangeOverflow;\n\t\treturn cv;\n\t}\n\n\t/**\n\t * Checks if the input element is required and the trimmed text is empty (contains only whitespaces).\n\t * @returns {{valueMissing: (*|boolean)}}\n\t */\n\t#isBlanknessConstraintViolated() {\n\t\tconst trimmedText = this.#inputElement.value.trim();\n\t\treturn {valueMissing: this.#textInput.hasAttribute(\"required\") && trimmedText === \"\"};\n\t}\n\n\t/**\n\t * This is a workaround for the fact that the browser does not validate decimals properly. It takes only\n\t * first 18 digits of the decimal number and then compares it with the min and max attributes.\n\t * So if the min attribute is 0 and the value is -0.0000000000000000001, then the browser will not\n\t * consider it as a range underflow (after conversion it becomes -0 => 0).\n\t * This is why we have to check the value manually.\n\t */\n\t#isRangeConstraintViolated() {\n\t\tif (this.#inputElement.type !== \"number\")\n\t\t\treturn {rangeUnderflow: false, rangeOverflow: false};\n\t\tconst {min, max, value} = this.#inputElement;\n\t\treturn {rangeUnderflow: (min !== \"\" && +value < +min), rangeOverflow: (max !== \"\" && +value > +max)};\n\t}\n\n\t#getValidationMessage(validityState) {\n\t\tconst isTypeNumber = this.#inputElement.type === \"number\";\n\t\tconst {badInput, rangeOverflow, rangeUnderflow, tooLong, tooShort, valueMissing, stepMismatch} = validityState;\n\t\tif (isTypeNumber && badInput)\n\t\t\treturn \"Invalid number\";\n\t\tif (isTypeNumber && stepMismatch && this.#inputElement.step === \"1\") {\n\t\t\t// Here we validate only floats because if step is 1, then the value must be an integer.\n\t\t\treturn \"Must be an integer\";\n\t\t}\n\t\tif (rangeOverflow)\n\t\t\treturn \"Greater than \" + this.#inputElement.max;\n\t\tif (rangeUnderflow)\n\t\t\treturn \"Less than \" + this.#inputElement.min;\n\t\tif (tooLong)\n\t\t\treturn \"Max length is \" + this.#inputElement.maxLength;\n\t\tif (tooShort)\n\t\t\treturn \"Min length is \" + this.#inputElement.minLength;\n\t\tif (!badInput && valueMissing)\n\t\t\treturn \"Required\";\n\t\treturn this.#inputElement.validationMessage;\n\t}\n}","export const KeyCode = Object.freeze({\n    \"Shift\": \"ShiftLeft\",\n    \"Esc\": \"Escape\",\n    \"Enter\": \"Enter\",\n    \"Up\": \"ArrowUp\",\n    \"Down\": \"ArrowDown\"\n});\n\n/**\n * @param {string} unsafe\n * @returns {string}\n */\nexport const safeText = (unsafe) => {\n    if (!unsafe)\n        return ''\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\n/**\n * To be used when generating HTML via string interpolation e.g. {@code safeHtml`<div>${variables}</div>`} -\n * these variables will go through this function and have to be escaped should such string be shown on UI.\n *\n * @param {TemplateStringsArray} strings\n * @param {string[]} values\n * @returns {string}\n */\nexport const safeHtml = (strings, ...values) => {\n    let result = strings[0];\n    for (let i = 0; i < values.length; i++) {\n        result += safeText(String(values[i]));\n        result += strings[i + 1];\n    }\n    return result;\n}\n\n/* @param {String} text */\nexport function getTextWidth(text) {\n    const span = document.createElement(\"span\");\n    document.body.appendChild(span)\n    span.textContent = text;\n    span.style.fontSize = '1rem';\n    span.style.visibility = 'hidden';\n    span.style.position = 'absolute';\n    const width = Math.ceil(span.getBoundingClientRect().width) + 1;\n    span.remove();\n    return width;\n}\n\nfunction getCssStyle(element, prop) {\n    return window.getComputedStyle(element, null).getPropertyValue(prop);\n}\n\nexport function isFiniteNumber (value) {\n    if (typeof value !== 'undefined' && Number.isFinite(value)) {\n        return true\n    }\n   else return false\n}","// @ts-check\nimport TextInputValidityState from \"./TextInputValidityState.js\";\nimport {isFiniteNumber, KeyCode, safeHtml} from \"../utils.js\"\n\nexport default class TextInput extends HTMLElement {\n    static #INPUT_ATTRIBUTES = new Set([\"autocomplete\", \"autofocus\", \"disabled\", \"max\", \"maxlength\",\n        \"min\", \"minlength\", \"name\", \"pattern\", \"readonly\", \"step\", \"type\", \"value\", \"placeholder\"\n        /* \"required\" - we do not want to set attribute required when render text-input, because in this case all\n        required inputs becomes red, as solution we just leave it in the root element and do this validation manually */]);\n    /** @type {HTMLInputElement} */\n    #inputElement;\n    /** @type {HTMLElement} */\n    #errorElement;\n    /** @type {TextInputValidityState} */\n    #validityState;\n    #callbacks = {\n        /** @type {Function[]} */\n        onTrailingIconClick: [],\n        /** @type {Function[]} */\n        onChangeValue: [],\n        /** @type {Function[]} */\n        onInput: []\n    };\n    /** @type {string} */\n    #lastChangedValue;\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"input\");\n        this.#errorElement = this.querySelector(\".text-input__error\");\n        this.#validityState = new TextInputValidityState(this);\n        this.#fillInputAttributes();\n        this.#addListeners();\n        if (this.hasAttribute(\"value\"))\n            this.value = this.getAttribute(\"value\");\n    }\n\n    disconnectedCallback() {\n        // Save value to attribute, because it will be lost after element is removed from DOM and reinserted.\n        // The case is happening when user adds new element to the table and then sorts it by reinserting rows.\n        this.setAttribute(\"value\", this.value);\n        window.removeEventListener(\"visibilitychange\", this.#onVisibilityChange.bind(this), { capture: true });\n    }\n\n    /**\n     * Returns trimmed value of the input.\n     * @returns {string}\n     */\n    get value() {\n        return this.rawValue.trim();\n    }\n\n    /**\n     * Returns raw value of the input.\n     * @returns {string}\n     */\n    get rawValue() {\n        return this.#inputElement.value;\n    }\n\n    /** @param {string | null} value */\n    set value(value) {\n        this.#inputElement.value = (isFiniteNumber(value) || typeof value == \"string\")? value : '';\n        this.#lastChangedValue = this.#inputElement.value\n        this.checkValidity();\n    }\n\n    checkValidity() {\n        const isValid = this.#validityState.checkValidity();\n        this.errorMessage = this.#validityState.errorMessage;\n        return isValid;\n    }\n\n    get errorMessage() {\n        return this.#errorElement.textContent;\n    }\n\n    set errorMessage(message) {\n        // We reset lastChangedValue because if the same invalid value is entered again, we want to validate this value\n       if (message){\n            this.#lastChangedValue = null;\n        }\n        this.#validityState.setCustomValidity(message);\n        this.#errorElement.textContent = this.#validityState.errorMessage;\n    }\n\n    /** @param {Function} callback */\n    onTrailingIconClick(callback) {\n        this.#callbacks.onTrailingIconClick.push(callback);\n    }\n    /** @param {Function} callback */\n    onInput(callback) {\n        this.#callbacks.onInput.push(callback);\n    }\n    /** @param {Function} callback */\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    // @ts-ignore\n    focus(options) {\n        this.#inputElement.focus(options)\n    }\n\n    /** @param {boolean} isDisabled */\n    setDisabled(isDisabled) {\n        this.toggleAttribute(\"disabled\", isDisabled);\n        this.#inputElement.toggleAttribute(\"disabled\", isDisabled);\n    }\n\n    /** @param {KeyboardEvent} event */\n    #onKeyDown(event) {\n        if (this.#inputElement.type === \"number\" && (event.key === KeyCode.Up || event.key === KeyCode.Down))\n            event.preventDefault();\n        if (event.key === KeyCode.Enter && !event.repeat)\n            this.#onChange();\n    }\n\n    #onInput() {\n        const isValid = this.checkValidity();\n        this.#callbacks.onInput.forEach(callback => callback(this.value, isValid));\n    }\n\n    #onChange() {\n        // We validate if the current value is not equal to the last changed value\n        if (this.#lastChangedValue !== this.value)\n            this.#validateAndNotify();\n    }\n\n    #onTrailingIconClick() {\n        this.#callbacks.onTrailingIconClick.forEach(callback => callback());\n    }\n\n    #validateAndNotify() {\n        if (this.checkValidity()) {\n            this.#lastChangedValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value));\n        }\n    }\n\n    #fillInputAttributes() {\n        for (const attribute of this.attributes)\n            if (TextInput.#INPUT_ATTRIBUTES.has(attribute.name))\n                this.#inputElement.setAttribute(attribute.name, attribute.value)\n        // For number inputs, if step is not specified then it is set to 1 by default, and it is not possible to enter\n        // decimal w/o validation error. So, if step is not specified, then we set it to \"any\" to allow decimal values.\n        if (this.getAttribute(\"type\") === \"number\" && !this.hasAttribute(\"step\"))\n            this.#inputElement.setAttribute(\"step\", \"any\");\n        if (this.hasAttribute(\"placeholder\"))\n            this.classList.add(\"placeholder-shown\");\n    }\n\n    #addListeners() {\n        this.#inputElement.addEventListener(\"keydown\", this.#onKeyDown.bind(this));\n        this.#inputElement.addEventListener(\"input\", this.#onInput.bind(this));\n        this.#inputElement.addEventListener(\"focusout\", this.#onChange.bind(this));\n        this.querySelector('.text-input__trailing-icon').addEventListener(\"click\", this.#onTrailingIconClick.bind(this));\n        window.addEventListener(\"visibilitychange\", this.#onVisibilityChange.bind(this), { capture: true });\n    }\n\n    /**\n     * This method is called when user:\n     *  - closes the tab\n     *  - closes browser window\n     *  - refreshes the page\n     *  - navigates to another page\n     *  - navigates to another tab\n     *  - minimizes the browser window\n     *\n     *  It is needed to blur the input element, because if it is focused, then it might be not saved to the database.\n     *  Blurring the input element will trigger the change event, if the value was changed.\n     *\n     *  Note: If the user closes the tab or browser window, then there is no guarantee that asynchronous requests\n     *  (XHR or fetch) will be sent. So, if the user closes the tab or browser window, then the value\n     *  of the input element might not be saved to the database.\n     */\n    #onVisibilityChange() {\n        if (document.activeElement === this.#inputElement)\n            this.#inputElement.blur();\n    }\n\n    #htmlTemplate() {\n        const trailingIconName = this.getAttribute(\"data-icon\") || \"\";\n        return safeHtml`<input class=\"text-input__input\" placeholder=\"needed for CSS\">\n                <label class=\"text-input__label\">${this.getAttribute(\"label\")}</label>\n                <i class=\"text-input__trailing-icon material-symbols-outlined\">${trailingIconName}</i>\n                <p class=\"text-input__error\"></p>`;\n    }\n\n    static get is() {\n        return 'text-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(TextInput.is)){\n    window.customElements.define(TextInput.is, TextInput);\n}\n","import {getTextWidth, safeHtml} from \"../utils.js\";\n\nexport default class ListBox extends HTMLElement {\n    #listElement;\n    #values = [];\n    #maxItemWidth = 0;\n    #selectedElementIndex = -1;\n    #callbacks = {\n        onOptionClick: []\n    }\n\n    /**\n     * @returns {{displayName:string}[]}\n     */\n    get options() {\n        return this.#values;\n    }\n\n    /**\n     * @param {{displayName:string}[]}values\n     */\n    set options(values) {\n        this.#setValues(values);\n        this.innerHTML = this.#htmlTemplate();\n        this.#listElement = this.querySelector(\"ul\");\n        this.#updatePosition();\n        this.#addListeners();\n    }\n\n    /**\n     * @param {string} filter\n     */\n    set filter(filter) {\n        const searchString = filter.toLowerCase();\n        for (const li of this.querySelectorAll(\"li\")) {\n            const {displayName} = this.#values[li.dataset.index];\n            const indexOf = displayName.toLowerCase().indexOf(searchString);\n            li.innerHTML = this.#getMarkedText(displayName, indexOf, searchString.length);\n            li.toggleAttribute('hidden', indexOf === -1);\n        }\n        const selectedElement = this.#getSelectedElement();\n        if (selectedElement) {\n            if (selectedElement.hasAttribute('hidden'))\n                this.#resetCurrentSelection();\n            else\n                selectedElement.scrollIntoView({block: \"nearest\"});\n        }\n    }\n\n    show() {\n        this.style.display = 'block';\n        this.#updatePosition();\n    }\n\n    hide() {\n        this.style.display = 'none';\n        this.#resetCurrentSelection();\n    }\n\n    selectNextItem() {\n        const visibleElements = this.#getVisibleElements();\n        if (!this.hasSelectedElement()) {\n            if (visibleElements.length === 0)\n                return;\n            this.#setSelectedElement(visibleElements[0].dataset.index);\n        } else {\n            const indexOf = visibleElements.indexOf(this.#getSelectedElement());\n            if (visibleElements.length - 1 <= indexOf) // is last item?\n                return;\n            this.#setSelectedElement(visibleElements[indexOf + 1].dataset.index);\n        }\n    }\n\n    selectPrevItem() {\n        const visibleElements = this.#getVisibleElements();\n        if (!this.hasSelectedElement()) {\n            if (visibleElements.length === 0)\n                return;\n            this.#setSelectedElement(visibleElements[visibleElements.length - 1].dataset.index);\n        } else {\n            const indexOf = visibleElements.indexOf(this.#getSelectedElement());\n            if (indexOf === 0) // is first item?\n                return;\n            this.#setSelectedElement(visibleElements[indexOf - 1].dataset.index);\n        }\n    }\n\n    triggerClickOnSelectedItem() {\n        if (this.hasSelectedElement())\n            this.#getSelectedElement().dispatchEvent(new MouseEvent('mousedown'));\n    }\n\n    hasSelectedElement() {\n        return this.#getSelectedElement() != null;\n    }\n\n    isVisible() {\n        return window.getComputedStyle(this).display !== 'none'\n    }\n\n    onOptionClick(cb) {\n        this.#callbacks.onOptionClick.push(cb);\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#listElement = this.querySelector(\"ul\");\n        this.#addListeners();\n    }\n\n    #setValues(values) {\n        this.#values = [...values].sort((a, b) => a.displayName.localeCompare(b.displayName));\n    }\n\n    #getVisibleElements() {\n        return [...this.#listElement.querySelectorAll('li:not([hidden])')];\n    }\n\n    #addListeners() {\n        for (const li of this.querySelectorAll(\"li\")) {\n            li.addEventListener('mousedown', () => {\n                const option = this.#values[li.dataset.index];\n                this.#callbacks.onOptionClick.forEach(cb => cb(option));\n            });\n        }\n    }\n\n    #htmlTemplate() {\n        return `\n            <ul>\n                ${this.#values.map((value, i) =>\n            safeHtml`<li data-index=\"${i}\" title=\"${value.displayName}\">${value.displayName}</li>`\n        ).join('')}\n            </ul>`;\n    }\n\n    #updatePosition() {\n        const parentClientRect = this.parentElement.getBoundingClientRect();\n        if (this.#maxItemWidth === 0) // calculate max item width only once\n            this.#maxItemWidth = Math.max(...this.#values.map(value => getTextWidth(value.displayName)), 0);\n        // if parent element width is greater than max item width, set list width to parent width\n        const widthToBe = Math.max(this.#maxItemWidth + 24/*paddings*/ + 22/*scrollbar*/, parentClientRect.width);\n        // max allowed width is the distance from the left side of parent element to the right side of the page\n        const maxAllowedWidth = document.documentElement.clientWidth - parentClientRect.left\n        if (widthToBe > maxAllowedWidth) { // can't fit to the right side, so put it to the left side\n            this.#listElement.style.right = 0;\n        } else {\n            this.#listElement.style.right = null;\n        }\n        this.#listElement.style.width = `${Math.min(widthToBe, document.documentElement.clientWidth)}px`;\n    }\n\n    #getSelectedElement() {\n        return this.querySelector(`li[data-index=\"${this.#selectedElementIndex}\"]`);\n    }\n\n    #setSelectedElement(elementIndex) {\n        this.#resetCurrentSelection();\n        this.#selectedElementIndex = elementIndex;\n        const element = this.#getSelectedElement();\n        element.classList.add('list-box__item--active');\n        element.scrollIntoView({block: \"nearest\"});\n    }\n\n    #resetCurrentSelection() {\n        if (this.#selectedElementIndex >= 0) {\n            const selectedElement = this.#getSelectedElement();\n            selectedElement.classList.remove('list-box__item--active');\n            this.#selectedElementIndex = -1;\n        }\n    }\n\n    #getMarkedText(text, startIndex, length) {\n        if (startIndex >= 0) {\n            const before = text.substring(0, startIndex);\n            const match = text.substring(startIndex, startIndex + length);\n            const after = text.substring(startIndex + length);\n            // wrap whole text in span to prevent swallowing spaces\n            return safeHtml`<span>${before}<mark>${match}</mark>${after}</span>`;\n        } else {\n            return text;\n        }\n    }\n\n    static get is() {\n        return 'list-box';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(ListBox.is)){\n    window.customElements.define(ListBox.is, ListBox);\n}\n","import '../TextInput/TextInput.js';\nimport '../ListBox/ListBox.js';\nimport { KeyCode, safeHtml } from \"../utils.js\"\n\nexport default class TypeAheadInput extends HTMLElement {\n    /**\n     * @type {TextInput}\n     */\n    #inputElement;\n    /**\n     * @type {ListBox}\n     */\n    #dropdownElement;\n    #currentValue;\n    #lastValidValue = null;\n    #shouldMatchOptions;\n    #callbacks = {\n        onChangeValue: []\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"text-input\");\n        this.#dropdownElement = this.querySelector(\"list-box\");\n        this.#shouldMatchOptions = this.hasAttribute(\"shouldMatchOptions\")\n        this.#addListeners();\n    }\n\n    get value() {\n        return this.#currentValue;\n    }\n\n    get rawValue() {\n        return this.#inputElement.value;\n    }\n\n    set value(value) {\n        this.#currentValue = value;\n        this.#inputElement.value = value && value.displayName ? value.displayName : \"\";\n    }\n\n    /**\n     * Sets the initial value of the input, as well as the last valid value.\n     */\n    set initialValue(value) {\n        this.value = value;\n        this.#lastValidValue = value;\n    }\n\n    set options(options) {\n        this.#dropdownElement.options = options;\n        this.#filterDatalist();\n    }\n\n    set errorMessage(message) {\n        this.#inputElement.errorMessage = message;\n    }\n\n    checkValidity() {\n        return this.#validate() && this.#inputElement.checkValidity();\n    }\n\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    /** @param {boolean} isDisabled */\n    setDisabled(isDisabled) {\n        this.toggleAttribute(\"disabled\", isDisabled);\n        this.#inputElement.setDisabled(isDisabled);\n    }\n\n\n    #onInput() {\n        this.errorMessage = \"\";\n        this.#filterDatalist();\n        if (!this.#dropdownElement.isVisible())\n            this.#dropdownElement.show();\n    }\n\n    #onFocus() {\n        this.#filterDatalist();\n        this.#dropdownElement.show();\n    }\n\n    #onBlur() {\n        this.#hideDropdownAndValidate();\n    }\n\n    #onOptionClick(option) {\n        this.value = option;\n        this.#hideDropdownAndValidate();\n    }\n\n    #onClearIconClick() {\n        this.value = {displayName: \"\"};\n        this.#inputElement.querySelector('input').focus();\n    }\n\n    #onKeydown(event) {\n        if ([KeyCode.Up, KeyCode.Down].includes(event.code)) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n        switch (event.key) {\n            case KeyCode.Esc: {\n                this.#hideDropdownAndValidate();\n                break;\n            }\n            case KeyCode.Enter: {\n                if (this.#dropdownElement.isVisible())\n                    if (this.#dropdownElement.hasSelectedElement())\n                        this.#dropdownElement.triggerClickOnSelectedItem();\n                    else\n                        this.#hideDropdownAndValidate();\n                break;\n            }\n            case KeyCode.Down: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectNextItem();\n                break;\n            }\n            case KeyCode.Up: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectPrevItem();\n                break;\n            }\n        }\n    }\n\n    #onInputValueChange() {\n        this.#validateAndNotify();\n    }\n\n    #hideDropdownAndValidate() {\n        this.#dropdownElement.hide();\n        this.#validateAndNotify();\n    }\n\n    #validateAndNotify() {\n        if (this.#validate() && this.#isValueChanged()) {\n            this.#lastValidValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value));\n        }\n    }\n\n    #validate() {\n        const inputText = this.#inputElement.value;\n        if (inputText === \"\") {\n            this.#currentValue = null;\n            return true; // assume that value is valid if it is empty, otherwise required attribute should be set\n        }\n        if (this.value && this.value.displayName === inputText) {\n            this.errorMessage = \"\";\n            return true; // assume that value is valid if it is the same as the initial value\n        }\n        if (!this.#shouldMatchOptions) {\n            this.errorMessage = \"\";\n            this.#currentValue = {displayName: inputText};\n            return true; // assume that value is valid if it should not match to any option\n        }\n        for (const option of this.#dropdownElement.options) {\n            if (option.displayName === inputText) {\n                this.errorMessage = \"\";\n                this.#currentValue = option;\n                this.#inputElement.value = option.displayName;\n                return true;\n            }\n        }\n        this.#currentValue = null;\n        this.errorMessage = \"Select from list\";\n        return false;\n    }\n\n    #filterDatalist() {\n        this.#dropdownElement.filter = this.#inputElement.value;\n    }\n\n    #isValueChanged() {\n        return this.#lastValidValue !== this.value;\n    }\n\n    #addListeners() {\n        const input = this.#inputElement.querySelector(\"input\");\n        this.addEventListener(\"keydown\", this.#onKeydown.bind(this));\n        input.addEventListener(\"input\", this.#onInput.bind(this));\n        input.addEventListener(\"blur\", this.#onBlur.bind(this));\n        input.addEventListener('focus', this.#onFocus.bind(this));\n        this.#inputElement.onTrailingIconClick(this.#onClearIconClick.bind(this));\n        this.#inputElement.onChangeValue(this.#onInputValueChange.bind(this));\n        this.#dropdownElement.onOptionClick(this.#onOptionClick.bind(this));\n    }\n\n    #htmlTemplate() {\n        const requiredAttribute = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const disabledAttribute = this.hasAttribute(\"disabled\") ? \"disabled\" : \"\";\n        const iconName = this.hasAttribute(\"no-icon\") ? \"\" : \"close\";\n        return safeHtml`\n            <text-input \n                class=\"text-input--with-right-icon\" \n                label=\"${this.getAttribute(\"label\")}\" \n                ${requiredAttribute}\n                ${disabledAttribute}\n                data-icon=\"${iconName}\"\n                autocomplete=\"off\"\n            ></text-input>\n            <list-box></list-box>`;\n    }\n\n    static get is() {\n        return 'typeahead-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(TypeAheadInput.is)){\n    window.customElements.define(TypeAheadInput.is, TypeAheadInput);\n}\n","import {KeyCode, safeHtml} from \"../utils.js\";\n\nexport default class SelectInput extends HTMLElement {\n    #inputElement;\n    #dropdownElement;\n    #currentValue;\n    #lastValidValue = null;\n\n    #callbacks = {\n        onShowDropdown: [],\n        onChangeValue: []\n    }\n\n    get value() {\n        return this.#currentValue;\n    }\n\n    set value(value) {\n        this.#inputElement.value = value && value.displayName ? value.displayName : \"\";\n        this.#currentValue = value;\n    }\n\n    set options(options) {\n        this.#dropdownElement.options = options;\n    }\n\n    showDropdown() {\n        this.#dropdownElement.show();\n        this.#callbacks.onShowDropdown.forEach(callback => callback());\n    }\n\n    onShowDropdown(callback) {\n        this.#callbacks.onShowDropdown.push(callback);\n    }\n\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    checkValidity() {\n        return this.#validate();\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"text-input\");\n        this.#dropdownElement = this.querySelector(\"list-box\");\n        this.#addListeners();\n    }\n\n    #addListeners() {\n        this.addEventListener(\"keydown\", this.#onKeydown.bind(this));\n        const input = this.#inputElement.querySelector(\"input\");\n        input.addEventListener('focus', this.#onFocus.bind(this));\n        input.addEventListener(\"focusout\", this.#onFocusout.bind(this));\n        input.addEventListener(\"click\", this.#onInputClick.bind(this));\n        this.#dropdownElement.onOptionClick(this.#onOptionClick.bind(this));\n    }\n\n    #onFocus() {\n        this.showDropdown();\n    }\n\n    #onFocusout() {\n        this.#hideDropdownAndValidate();\n    }\n\n    #onOptionClick(option) {\n        this.#inputElement.value = option.displayName;\n        this.#currentValue = option;\n        this.#hideDropdownAndValidate();\n    }\n\n    #onInputClick() {\n        this.showDropdown();\n    }\n\n    #onKeydown(event) {\n        if ([KeyCode.Up, KeyCode.Down].includes(event.code)) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n        switch (event.key) {\n            case KeyCode.Esc: {\n                event.preventDefault();\n                this.#hideDropdownAndValidate();\n                this.#inputElement.focus();\n                break;\n            }\n            case KeyCode.Enter: {\n                if (this.#dropdownElement.isVisible()) {\n                    event.stopPropagation();\n                    if (this.#dropdownElement.hasSelectedElement())\n                        this.#dropdownElement.triggerClickOnSelectedItem();\n                    else\n                        this.#dropdownElement.hide();\n                }\n                break;\n            }\n            case KeyCode.Down: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectNextItem();\n                break;\n            }\n            case KeyCode.Up: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectPrevItem();\n                break;\n            }\n        }\n    }\n\n    #hideDropdownAndValidate() {\n        this.#dropdownElement.hide();\n        this.#validateAndNotify();\n    }\n\n    #validateAndNotify() {\n        if (this.#validate() && this.#lastValidValue !== this.value) {\n            this.#lastValidValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value))\n        }\n    }\n\n    #validate() {\n        if (this.#inputElement.hasAttribute(\"required\") && !this.#inputElement.value)\n            this.#inputElement.errorMessage = \"Required\";\n        else\n            this.#inputElement.errorMessage = \"\";\n        return this.#inputElement.checkValidity();\n    }\n\n    #htmlTemplate() {\n        const requiredAttribute = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const disabledAttribute = this.hasAttribute(\"disabled\") ? \"disabled\" : \"\";\n        return safeHtml`\n            <text-input\n                class=\"text-input--select\" \n                label=\"${this.getAttribute(\"label\")}\" \n                ${requiredAttribute}\n                ${disabledAttribute}\n                data-icon=\"arrow_drop_down\"\n                readonly\n            ></text-input>\n            <list-box></list-box>`;\n    }\n\n    static get is() {\n        return 'select-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(SelectInput.is)){\n    window.customElements.define(SelectInput.is, SelectInput);\n}\n","import {KeyCode} from \"../utils.js\";\n\nexport default class EditText extends HTMLElement {\n    #children;\n    #isValid = true;\n    #lastEnteredValue;\n    #suffix = \"\";\n    #prefix = \"\";\n\n    #resizeObserver = new ResizeObserver(this.#updatePopupPosition.bind(this));\n\n    #callbacks = {\n        onChangeValue: []\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#children = {\n            text: this.querySelector(\".edit-text__text\"),\n            popup: this.querySelector(\".edit-text__popup\"),\n            input: this.querySelector('text-input')\n        };\n        this.#addListeners();\n        this.#resizeObserver.observe(document.body);\n        this.#initAttributes();\n        this.#updateTextValue();\n    }\n\n    disconnectedCallback() {\n        this.#resizeObserver.unobserve(document.body);\n    }\n\n    value() {\n        return this.getAttribute(\"value\");\n    }\n\n    onChange(cb){\n        this.#callbacks.onChangeValue.push(cb);\n    }\n\n    #getDisplayName(){\n        let val = this.value();\n        if (this.#isNumberType())\n            val = +val;\n        return `${this.#prefix}${val}${this.#suffix}`\n    }\n\n    #addListeners() {\n        this.#children.text.addEventListener(\"click\", this.#showPopup.bind(this));\n        this.addEventListener('mousedown', this.#onClickOutsideOfInput.bind(this));\n        this.#children.popup.addEventListener('keydown', this.#onKeydown.bind(this));\n        this.#children.input.onInput(this.#onInput.bind(this));\n        this.addEventListener(\"cancel\", this.#onEscape.bind(this));\n        this.querySelector(\".popup-content\").addEventListener(\"click\", (event) => {\n            event.stopPropagation();\n        });\n    }\n\n    #showPopup() {\n        this.#updateInputValue();\n        this.#updatePopupPosition();\n        this.#children.popup.showModal();\n        this.#children.input.focus();\n    }\n\n    #onInput(_, isValid) {\n        this.#isValid = isValid;\n        const value = this.#children.input.rawValue;\n        if (10 < value.length) {\n            this.#children.input.value = this.#lastEnteredValue;\n            this.#isValid = this.#children.input.checkValidity();\n        } else {\n            this.#lastEnteredValue = value;\n        }\n    }\n\n    #onEscape() {\n        this.#children.popup.close();\n    }\n\n    #onEnter() {\n        if (this.#isValid) {\n            this.#children.popup.close();\n            this.#updateDisplayTextAndNotifyIfChanged();\n        }\n    }\n\n    #onClickOutsideOfInput(event) {\n        if (event.target !== this.#children.popup)\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        this.#children.popup.close();\n        if (this.#isValid)\n            this.#updateDisplayTextAndNotifyIfChanged();\n    }\n\n    #updateDisplayTextAndNotifyIfChanged() {\n        if (this.value() !== this.#children.input.value){\n            this.#updateTextValue();\n            this.#callbacks.onChangeValue.forEach(cb => cb(this.value()));\n        }\n    }\n\n    #onKeydown(evt) {\n        evt.stopPropagation();\n        if (evt.key === KeyCode.Enter && !evt.repeat)\n            this.#onEnter();\n    }\n\n    #updateInputValue() {\n        this.#lastEnteredValue = this.getAttribute(\"value\");\n        this.#children.input.value = this.#lastEnteredValue;\n    }\n\n    #updateTextValue() {\n        this.setAttribute(\"value\", this.#children.input.value);\n        this.#children.text.textContent = this.#getDisplayName();\n    }\n\n    #updatePopupPosition() {\n        let {top, left} = this.getBoundingClientRect();\n        this.#children.popup.style.top = top + window.scrollY + \"px\";\n        this.#children.popup.style.left = left + window.scrollX + \"px\";\n    }\n\n    #isNumberType() {\n        return this.getAttribute(\"type\") === \"number\"\n    }\n\n    #initAttributes(){\n        if (this.hasAttribute(\"suffix\"))\n            this.#suffix = this.getAttribute(\"suffix\");\n        if (this.hasAttribute(\"prefix\"))\n            this.#prefix = this.getAttribute(\"prefix\");\n    }\n\n    #htmlTemplate() {\n        const requiredAttr = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const typeAttr = this.getAttribute(\"type\") || \"text\";\n        let stepAttr = \"\";\n        if (this.hasAttribute(\"step\"))\n            stepAttr = `step=\"${this.getAttribute(\"step\")}\"`\n        let minAttr = \"\";\n        if (this.hasAttribute(\"min\"))\n            minAttr = `min=\"${this.getAttribute(\"min\")}\"`\n        let maxAttr = \"\";\n        if (this.hasAttribute(\"max\"))\n            maxAttr = `max=\"${this.getAttribute(\"max\")}\"`\n        const value = this.getAttribute(\"value\");\n        return `<span class=\"edit-text__text\"></span>\n                <dialog class=\"edit-text__popup\" tabindex=\"9\">\n                    <section class=\"popup-content\">\n                        <text-input \n                            class=\"text-input--with-right-icon\" \n                            label=\"\" \n                            autocomplete=\"off\"\n                            ${requiredAttr}\n                            ${stepAttr}\n                            ${minAttr}\n                            ${maxAttr}\n                            type=\"${typeAttr}\"\n                            value=\"${value}\"\n                        ></text-input>\n                    </section>\n                </dialog>`;\n    }\n\n    static get is() {\n        return 'edit-text';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(EditText.is)){\n    window.customElements.define(EditText.is, EditText);\n}\n","import {safeText} from \"../utils.js\";\n\nexport default class SnackBar {\n    /**\n     * SnackBar is a tiny notification displayed at the bottom of the screen. It's allowed to have only one SnackBar in\n     * the same time. Creating a new SnackBar will remove the old one. Default living time is 15 sec after which\n     * SnackBar disappears.\n     * Properties:\n     * - msgText - main text (e.g. Smth was deleted)\n     * - btnText - OK button text (e.g. Undo)\n     * - btnCb - function to be called when OK btn pressed\n     * - ttl - aka TimeToLive in milliseconds\n     */\n    /** @param {string} - needed in order to be able to create multiple snackbars on a page */\n    #snackBarId;\n    /** @param {number} - needed in order to delete the previous timeout when a new one appears */\n    #timeoutId;\n    /** @param {HTMLElement} */\n    #snackBarEl;\n    #onButtonClickCb = ()=>{}\n\n    /** @param {string} id */\n    constructor(id = 'snackBar') {\n        this.#snackBarId = id;\n    }\n\n    /**\n     * @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop\n     */\n    show(prop) {\n        SnackBar.#validateProperties(prop);\n        this.#onButtonClickCb = prop.btnCb;\n        this.#removeExistingIfNeeded();\n        this.#snackBarEl = this.#createSnackBarElement(this.#snackBarId, prop);\n        this.#setEventListeners();\n        this.#timeoutId = setTimeout(() => {\n            this.remove()\n        }, prop.ttl || 15 * 1000);\n    }\n\n    #getOkButton() {\n        return this.#snackBarEl.querySelector('[js-ok]');\n    }\n\n    #getCloseButton() {\n        return this.#snackBarEl.querySelector('[js-close]');\n    }\n\n    #getSnackbarEl() {\n        return document.getElementById(`${this.#snackBarId}`);\n    }\n\n    #removeExistingIfNeeded(){\n        const existing = this.#getSnackbarEl();\n        if (existing)\n            existing.remove();\n        if (this.#timeoutId)\n            window.clearTimeout(this.#timeoutId)\n    }\n\n    #setEventListeners() {\n        const okButton = this.#getOkButton();\n        if (okButton) {\n            okButton.addEventListener('click', () => {\n                this.remove();\n                this.#onButtonClickCb();\n            })\n        }\n        const closeButton = this.#getCloseButton();\n        closeButton.addEventListener('click', () => {this.remove()})\n    }\n\n    remove() {\n        this.#snackBarEl.remove();\n        const containerEl = SnackBar.#getSnackBarContainerEl();\n        if (containerEl.children.length === 0)\n            containerEl.remove();\n    }\n\n    /**\n     * @param {string} id\n     * @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop\n     * @return {HTMLDivElement}\n     */\n    #createSnackBarElement(id, prop) {\n        const containerEl = SnackBar.#getSnackBarContainerEl();\n        containerEl.insertAdjacentHTML(\"beforeend\", SnackBar.#htmlTemplate(prop.msgText, prop.btnText, this.#snackBarId));\n        return containerEl.lastElementChild;\n    }\n\n    /**\n     * @param {string} messageText\n     * @param {string?} buttonText\n     * @param {string} elementId\n     * @return {string}\n     */\n    static #htmlTemplate(messageText, buttonText, elementId) {\n        return `\n            <div id=\"${safeText(elementId)}\" class=\"snackbar\">\n                <div class=\"snackbar__label\">${safeText(messageText)}</div>\n                <div class=\"snackbar__buttons\">\n                    ${buttonText ? `<button class=\"snackbar__button-ok\" js-ok>${safeText(buttonText)}</button>` : ''}\n                    <button class=\"snackbar__button-close material-symbols-outlined\" js-close title=\"Close\">close</button>\n                </div>\n            </div>`\n    }\n\n    /** @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop */\n    static #validateProperties(prop) {\n        if (!prop) throw new Error('No SnackBar properties');\n        if (!prop.msgText) throw new Error('Empty SnackBar message text');\n        if (prop.btnText && !prop.btnCb) throw new Error('No callback for SnackBar button');\n        if (!prop.btnText && prop.btnCb) throw new Error('No SnackBar button text');\n        if (prop.btnCb && (typeof prop.btnCb !== \"function\")) throw new Error('Callback for SnackBar button is not a function');\n        if (prop.ttl && (typeof prop.ttl !== \"number\")) throw new Error('TTL is not a number');\n    }\n\n    static #getSnackBarContainerEl(){\n        let container = document.body.querySelector(\".snackbar-container\");\n        if (!container){\n            document.body.insertAdjacentHTML(\"beforeend\", \"<div class='snackbar-container'/>\");\n            container = document.body.lastElementChild;\n        }\n        return container;\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","TextInputValidityState","constructor","textInput","this","querySelector","isValid","errorMessage","checkValidity","setCustomValidity","validity","valid","message","badInput","customError","patternMismatch","typeMismatch","rangeOverflow","rangeUnderflow","tooLong","tooShort","valueMissing","stepMismatch","cv","assign","trimmedText","trim","hasAttribute","type","min","max","validityState","isTypeNumber","step","maxLength","minLength","validationMessage","KeyCode","freeze","safeText","unsafe","replace","safeHtml","strings","values","result","i","length","String","TextInput","HTMLElement","static","Set","onTrailingIconClick","onChangeValue","onInput","connectedCallback","innerHTML","getAttribute","disconnectedCallback","setAttribute","window","removeEventListener","bind","capture","rawValue","Number","isFinite","isFiniteNumber","textContent","callback","push","focus","options","setDisabled","isDisabled","toggleAttribute","event","Up","Down","preventDefault","Enter","repeat","forEach","attribute","attributes","has","name","classList","add","addEventListener","document","activeElement","blur","trailingIconName","is","customElements","ListBox","onOptionClick","filter","searchString","toLowerCase","li","querySelectorAll","displayName","dataset","index","indexOf","selectedElement","scrollIntoView","block","show","style","display","hide","selectNextItem","visibleElements","hasSelectedElement","selectPrevItem","triggerClickOnSelectedItem","dispatchEvent","MouseEvent","isVisible","getComputedStyle","cb","sort","a","b","localeCompare","option","map","join","parentClientRect","parentElement","getBoundingClientRect","Math","text","span","createElement","body","appendChild","fontSize","visibility","position","width","ceil","remove","getTextWidth","widthToBe","maxAllowedWidth","documentElement","clientWidth","left","right","elementIndex","element","startIndex","before","substring","match","after","TypeAheadInput","initialValue","includes","code","stopImmediatePropagation","Esc","inputText","input","requiredAttribute","disabledAttribute","iconName","SelectInput","onShowDropdown","showDropdown","stopPropagation","EditText","ResizeObserver","popup","observe","unobserve","onChange","val","showModal","_","close","target","evt","top","scrollY","scrollX","requiredAttr","typeAttr","stepAttr","minAttr","maxAttr","SnackBar","id","btnCb","setTimeout","ttl","getElementById","existing","clearTimeout","okButton","containerEl","children","insertAdjacentHTML","msgText","btnText","lastElementChild","messageText","buttonText","elementId","Error","container"],"sourceRoot":""}
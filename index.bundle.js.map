{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://elsciUi/webpack/universalModuleDefinition","webpack://elsciUi/webpack/bootstrap","webpack://elsciUi/webpack/runtime/define property getters","webpack://elsciUi/webpack/runtime/hasOwnProperty shorthand","webpack://elsciUi/webpack/runtime/make namespace object","webpack://elsciUi/./src/TextInput/TextInputValidityState.js","webpack://elsciUi/./src/utils.js","webpack://elsciUi/./src/TextInput/TextInput.js","webpack://elsciUi/./src/ListBox/ListBox.js","webpack://elsciUi/./src/TypeAheadInput/TypeAheadInput.js","webpack://elsciUi/./src/SelectInput/SelectInput.js","webpack://elsciUi/./src/EditText/EditText.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elsciUi\"] = factory();\n\telse\n\t\troot[\"elsciUi\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class TextInputValidityState {\n\t#textInput;\n\t#inputElement;\n\t#isValid;\n\t#errorMessage;\n\n\tconstructor(textInput) {\n\t\tthis.#textInput = textInput\n\t\tthis.#inputElement = textInput.querySelector('input');\n\t\tthis.#isValid = true;\n\t\tthis.#errorMessage = \"\";\n\t}\n\n\tget isValid() {\n\t\treturn this.#isValid;\n\t}\n\n\tget errorMessage() {\n\t\treturn this.#errorMessage;\n\t}\n\n\tcheckValidity() {\n\t\t// reset custom validity\n\t\tthis.setCustomValidity(\"\");\n\t\tthis.#inputElement.checkValidity();\n\t\t// if the input element is valid, then check custom validity\n\t\tlet validity = this.#inputElement.validity;\n\t\tif (validity.valid) {\n\t\t\tvalidity = this.#getCustomValidity();\n\t\t}\n\t\tthis.#isValid = validity.valid;\n\t\tthis.#errorMessage = this.#getValidationMessage(validity);\n\t\treturn this.isValid;\n\t}\n\n\tsetCustomValidity(message) {\n\t\tthis.#inputElement.setCustomValidity(message);\n\t\tthis.#isValid = this.#inputElement.validity.valid;\n\t\tthis.#errorMessage = message;\n\t}\n\n\t/**\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n\t * Here we add our own validation steps, and update the validity state properties.\n\t *  - valueMissing: if the input element is required and the trimmed text is empty (contains only whitespaces).\n\t *  - rangeUnderflow: if the input element is a number and the value is less than the min attribute.\n\t *  - rangeOverflow: if the input element is a number and the value is greater than the max attribute.\n\t */\n\t#getCustomValidity() {\n\t\tconst {badInput, customError, patternMismatch, typeMismatch, valid, rangeOverflow, rangeUnderflow, tooLong,\n\t\t\ttooShort, valueMissing, stepMismatch} = this.#inputElement.validity;\n\t\tconst cv = Object.assign({},\n\t\t\t{badInput, customError, patternMismatch, typeMismatch, valid, rangeOverflow, rangeUnderflow, tooLong,\n\t\t\t\ttooShort, valueMissing, stepMismatch},\n\t\t\tthis.#isBlanknessConstraintViolated(),\n\t\t\tthis.#isRangeConstraintViolated(),\n\t\t\tthis.#isStepConstraintViolated()\n\t\t);\n\t\tcv.valid = !cv.valueMissing && !cv.rangeUnderflow && !cv.rangeOverflow && !cv.stepMismatch;\n\t\treturn cv;\n\t}\n\n\t/**\n\t * Checks if the input element is required and the trimmed text is empty (contains only whitespaces).\n\t * @returns {{valueMissing: (*|boolean)}}\n\t */\n\t#isBlanknessConstraintViolated() {\n\t\tconst trimmedText = this.#inputElement.value.trim();\n\t\treturn {valueMissing: this.#textInput.hasAttribute(\"required\") && trimmedText === \"\"};\n\t}\n\n\t/**\n\t * This is a workaround for the fact that the browser does not validate decimals properly. It takes only\n\t * first 18 digits of the decimal number and then compares it with the min and max attributes.\n\t * So if the min attribute is 0 and the value is -0.0000000000000000001, then the browser will not\n\t * consider it as a range underflow (after conversion it becomes -0 => 0).\n\t * This is why we have to check the value manually.\n\t */\n\t#isRangeConstraintViolated() {\n\t\tif (this.#inputElement.type !== \"number\")\n\t\t\treturn {rangeUnderflow: false, rangeOverflow: false};\n\t\tconst {min, max, value} = this.#inputElement;\n\t\treturn {rangeUnderflow: (min !== \"\" && +value < +min), rangeOverflow: (max !== \"\" && +value > +max)};\n\t}\n\n\t/**\n\t * This method serves to supplement internal validation to determine whether a float qualifies as an integer.\n\t * The internal validation for an input type=\"number\" step=\"1\" doesn't consistently cover all cases.\n\t * For example, the number 2.00000001 might be considered an integer by the internal validator.\n\t * So we are using attribute 'number-type=\"integer\"'\n\t * The aim is to widen this validation range. Now, the comparison for an integer works correctly when a number\n\t * has no more than 16 digits. However, if a number has 17 digits or more, this function returns incorrect result.\n\t *\n\t * We use StepMismatch property because internal validation writes this error to this property\n\t * StepMismatch property of a ValidityState object indicates if the value of an <input>, after having been edited\n\t * by the user, does not conform to the constraints set by the element's step attribute.\n\t *\n\t * @return {{stepMismatch: boolean}}\n\t */\n\t#isStepConstraintViolated() {\n\t\tif (this.#inputElement.type !== \"number\")\n\t\t\treturn {stepMismatch: false};\n\t\tconst numberType = this.#textInput.getAttribute('number-type');\n\t\tif (!numberType || numberType !== \"integer\")\n\t\t\treturn {stepMismatch: false};\n\t\tconst stepMismatch =  !Number.isInteger(this.#inputElement.valueAsNumber);\n\t\treturn {stepMismatch: stepMismatch};\n\t}\n\n\t#getValidationMessage(validityState) {\n\t\tconst isTypeNumber = this.#inputElement.type === \"number\";\n\t\tconst {badInput, rangeOverflow, rangeUnderflow, tooLong, tooShort, valueMissing, stepMismatch} = validityState;\n\t\tif (isTypeNumber && badInput)\n\t\t\treturn \"Invalid number\";\n\t\tif (isTypeNumber && stepMismatch) {\n\t\t\tif (this.#inputElement.step === \"1\" ){\n\t\t\t\t// Here we checked floats because if step is 1, then the value must be an integer.\n\t\t\t\t// Now we can use attribute 'number-type=\"integer\"', but we have previously written inputs,\n\t\t\t\t// that's why don't want to remove this code\n\t\t\t\treturn \"Must be an integer\";\n\t\t\t}\n\t\t\tconst numberType = this.#textInput.getAttribute('number-type');\n\t\t\tif (numberType && numberType === \"integer\") {\n\t\t\t\treturn \"Must be an integer\";\n\t\t\t}\n\t\t}\n\t\tif (rangeOverflow)\n\t\t\treturn \"Greater than \" + this.#inputElement.max;\n\t\tif (rangeUnderflow)\n\t\t\treturn \"Less than \" + this.#inputElement.min;\n\t\tif (tooLong)\n\t\t\treturn \"Max length is \" + this.#inputElement.maxLength;\n\t\tif (tooShort)\n\t\t\treturn \"Min length is \" + this.#inputElement.minLength;\n\t\tif (!badInput && valueMissing)\n\t\t\treturn \"Required\";\n\t\treturn this.#inputElement.validationMessage;\n\t}\n}","export const KeyCode = Object.freeze({\n    \"Shift\": \"ShiftLeft\",\n    \"Esc\": \"Escape\",\n    \"Enter\": \"Enter\",\n    \"Up\": \"ArrowUp\",\n    \"Down\": \"ArrowDown\"\n});\n\n/**\n * @param {string} unsafe\n * @returns {string}\n */\nexport const safeText = (unsafe) => {\n    if (!unsafe)\n        return ''\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\n/**\n * To be used when generating HTML via string interpolation e.g. {@code safeHtml`<div>${variables}</div>`} -\n * these variables will go through this function and have to be escaped should such string be shown on UI.\n *\n * @param {TemplateStringsArray} strings\n * @param {string[]} values\n * @returns {string}\n */\nexport const safeHtml = (strings, ...values) => {\n    let result = strings[0];\n    for (let i = 0; i < values.length; i++) {\n        result += safeText(String(values[i]));\n        result += strings[i + 1];\n    }\n    return result;\n}\n\n/* @param {String} text */\nexport function getTextWidth(text) {\n    const span = document.createElement(\"span\");\n    document.body.appendChild(span)\n    span.textContent = text;\n    span.style.fontSize = '1rem';\n    span.style.visibility = 'hidden';\n    span.style.position = 'absolute';\n    const width = Math.ceil(span.getBoundingClientRect().width) + 1;\n    span.remove();\n    return width;\n}\n\nfunction getCssStyle(element, prop) {\n    return window.getComputedStyle(element, null).getPropertyValue(prop);\n}\n\nexport function isFiniteNumber (value) {\n    if (typeof value !== 'undefined' && Number.isFinite(value)) {\n        return true\n    }\n   else return false\n}\n\n/**\n * Function that rounds a number to a specified number of decimal places.\n * @param {number} number\n * @param {number} decimalPlaces\n * @return {number}\n */\nexport function roundToDecimalPlaces(number, decimalPlaces) {\n    const multiplier = Math.pow(10, decimalPlaces);\n    return Math.round(number * multiplier) / multiplier;\n}","// @ts-check\nimport TextInputValidityState from \"./TextInputValidityState.js\";\nimport {isFiniteNumber, KeyCode, safeHtml} from \"../utils.js\"\n\n/**\n * @typedef {import(\"../InputValidator.js\").default} InputValidator\n */\nexport default class TextInput extends HTMLElement {\n    static #INPUT_ATTRIBUTES = new Set([\"autocomplete\", \"autofocus\", \"disabled\", \"max\", \"maxlength\",\n        \"min\", \"minlength\", \"name\", \"pattern\", \"readonly\", \"step\", \"type\", \"value\", \"placeholder\"\n        /* \"required\" - we do not want to set attribute required when render text-input, because in this case all\n        required inputs becomes red, as solution we just leave it in the root element and do this validation manually */]);\n    /** @type {HTMLInputElement} */\n    #inputElement;\n    /** @type {HTMLElement} */\n    #errorElement;\n    /** @type {TextInputValidityState} */\n    #validityState;\n    #callbacks = {\n        /** @type {Function[]} */\n        onTrailingIconClick: [],\n        /** @type {Function[]} */\n        onChangeValue: [],\n        /** @type {Function[]} */\n        onInput: []\n    };\n    /** @type {string} */\n    #lastChangedValue;\n    /** @type {InputValidator[]} */\n    #validators = [];\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"input\");\n        this.#errorElement = this.querySelector(\".text-input__error\");\n        this.#validityState = new TextInputValidityState(this);\n        this.#fillInputAttributes();\n        this.#addListeners();\n        if (this.hasAttribute(\"value\"))\n            this.value = this.getAttribute(\"value\");\n    }\n\n    disconnectedCallback() {\n        // Save value to attribute, because it will be lost after element is removed from DOM and reinserted.\n        // The case is happening when user adds new element to the table and then sorts it by reinserting rows.\n        this.setAttribute(\"value\", this.value);\n        window.removeEventListener(\"visibilitychange\", this.#onVisibilityChange.bind(this), { capture: true });\n    }\n\n    /** @param {InputValidator} validator */\n    addValidator(validator) {\n        this.#validators.push(validator);\n    }\n\n    /**\n     * Returns trimmed value of the input.\n     * @returns {string}\n     */\n    get value() {\n        return this.rawValue.trim();\n    }\n\n    /**\n     * Returns raw value of the input.\n     * @returns {string}\n     */\n    get rawValue() {\n        return this.#inputElement.value;\n    }\n\n    /** @param {string | null} value */\n    set value(value) {\n        this.#inputElement.value = (isFiniteNumber(value) || typeof value == \"string\")? value : '';\n        this.#lastChangedValue = this.#inputElement.value\n        this.checkValidity();\n    }\n\n    checkValidity() {\n        if (!this.#validityState.checkValidity()){\n            this.errorMessage = this.#validityState.errorMessage;\n            return false;\n        }\n        this.errorMessage = this.#validityState.errorMessage;\n        for (const validator of this.#validators) {\n            const result = validator.validate(this, this.value);\n            if (!result.isValid) {\n                this.errorMessage = result.errorMessage;\n                this.focus()\n                return false;\n            }\n        }\n        return true;\n    }\n\n    get errorMessage() {\n        return this.#errorElement.textContent;\n    }\n\n    set errorMessage(message) {\n        // We reset lastChangedValue because if the same invalid value is entered again, we want to validate this value\n       if (message){\n            this.#lastChangedValue = null;\n        }\n        this.#validityState.setCustomValidity(message);\n        this.#errorElement.textContent = this.#validityState.errorMessage;\n    }\n\n    /** @param {Function} callback */\n    onTrailingIconClick(callback) {\n        this.#callbacks.onTrailingIconClick.push(callback);\n    }\n    /** @param {Function} callback */\n    onInput(callback) {\n        this.#callbacks.onInput.push(callback);\n    }\n    /** @param {Function} callback */\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    // @ts-ignore\n    focus(options) {\n        this.#inputElement.focus(options)\n    }\n\n    /** @param {boolean} isDisabled */\n    setDisabled(isDisabled) {\n        this.toggleAttribute(\"disabled\", isDisabled);\n        this.#inputElement.toggleAttribute(\"disabled\", isDisabled);\n    }\n\n    /** @param {KeyboardEvent} event */\n    #onKeyDown(event) {\n        if (this.#inputElement.type === \"number\" && (event.key === KeyCode.Up || event.key === KeyCode.Down))\n            event.preventDefault();\n        if (event.key === KeyCode.Enter && !event.repeat)\n            this.#onChange();\n    }\n\n    #onInput() {\n        const isValid = this.checkValidity();\n        this.#callbacks.onInput.forEach(callback => callback(this.value, isValid));\n    }\n\n    #onChange() {\n        // We validate if the current value is not equal to the last changed value\n        if (this.#lastChangedValue !== this.value)\n            this.#validateAndNotify();\n    }\n\n    #onTrailingIconClick() {\n        this.#callbacks.onTrailingIconClick.forEach(callback => callback());\n    }\n\n    #validateAndNotify() {\n        if (this.checkValidity()) {\n            this.#lastChangedValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value));\n        }\n    }\n\n    #fillInputAttributes() {\n        for (const attribute of this.attributes)\n            if (TextInput.#INPUT_ATTRIBUTES.has(attribute.name))\n                this.#inputElement.setAttribute(attribute.name, attribute.value)\n        // For number inputs, if step is not specified then it is set to 1 by default, and it is not possible to enter\n        // decimal w/o validation error. So, if step is not specified, then we set it to \"any\" to allow decimal values.\n        if (this.getAttribute(\"type\") === \"number\" && !this.hasAttribute(\"step\"))\n            this.#inputElement.setAttribute(\"step\", \"any\");\n        if (this.hasAttribute(\"placeholder\"))\n            this.classList.add(\"placeholder-shown\");\n    }\n\n    #addListeners() {\n        this.#inputElement.addEventListener(\"keydown\", this.#onKeyDown.bind(this));\n        this.#inputElement.addEventListener(\"input\", this.#onInput.bind(this));\n        this.#inputElement.addEventListener(\"focusout\", this.#onChange.bind(this));\n        this.querySelector('.text-input__trailing-icon').addEventListener(\"click\", this.#onTrailingIconClick.bind(this));\n        window.addEventListener(\"visibilitychange\", this.#onVisibilityChange.bind(this), { capture: true });\n    }\n\n    /**\n     * This method is called when user:\n     *  - closes the tab\n     *  - closes browser window\n     *  - refreshes the page\n     *  - navigates to another page\n     *  - navigates to another tab\n     *  - minimizes the browser window\n     *\n     *  It is needed to blur the input element, because if it is focused, then it might be not saved to the database.\n     *  Blurring the input element will trigger the change event, if the value was changed.\n     *\n     *  Note: If the user closes the tab or browser window, then there is no guarantee that asynchronous requests\n     *  (XHR or fetch) will be sent. So, if the user closes the tab or browser window, then the value\n     *  of the input element might not be saved to the database.\n     */\n    #onVisibilityChange() {\n        if (document.activeElement === this.#inputElement)\n            this.#inputElement.blur();\n    }\n\n    #htmlTemplate() {\n        const trailingIconName = this.getAttribute(\"data-icon\") || \"\";\n        return safeHtml`<input class=\"text-input__input\" placeholder=\"needed for CSS\">\n                <label class=\"text-input__label\">${this.getAttribute(\"label\")}</label>\n                <i class=\"text-input__trailing-icon material-symbols-outlined\">${trailingIconName}</i>\n                <p class=\"text-input__error\"></p>`;\n    }\n\n    static get is() {\n        return 'text-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(TextInput.is)){\n    window.customElements.define(TextInput.is, TextInput);\n}\n","import {getTextWidth, safeHtml} from \"../utils.js\";\n\nexport default class ListBox extends HTMLElement {\n    #listElement;\n    #values = [];\n    #maxItemWidth = 0;\n    #selectedElementIndex = -1;\n    /** @type {function|null} */\n    #comparator = (a, b) => a.displayName.localeCompare(b.displayName);\n    #callbacks = {\n        onOptionClick: []\n    }\n    #preventScrollFunction;\n\n    /**\n     * @returns {{displayName:string}[]}\n     */\n    get options() {\n        return this.#values;\n    }\n\n    /**\n     * @param {{displayName:string}[]}values\n     */\n    set options(values) {\n        this.#setValues(values);\n        this.innerHTML = this.#htmlTemplate();\n        this.#listElement = this.querySelector(\"ul\");\n        this.#updatePosition();\n        this.#addListeners();\n    }\n\n    /** @param {function|null} comparator */\n    set comparator(comparator) {\n        this.#comparator = comparator;\n    }\n\n    /**\n     * @param {string} filter\n     */\n    set filter(filter) {\n        const searchString = filter.toLowerCase();\n        for (const li of this.querySelectorAll(\"li\")) {\n            const {displayName} = this.#values[li.dataset.index];\n            const indexOf = displayName.toLowerCase().indexOf(searchString);\n            li.innerHTML = this.#getMarkedText(displayName, indexOf, searchString.length);\n            li.toggleAttribute('hidden', indexOf === -1);\n        }\n        const selectedElement = this.#getSelectedElement();\n        if (selectedElement) {\n            if (selectedElement.hasAttribute('hidden'))\n                this.#resetCurrentSelection();\n            else\n                selectedElement.scrollIntoView({block: \"nearest\"});\n        }\n    }\n\n    show() {\n        document.addEventListener(\"wheel\", this.#preventScrollFunction, {capture: true, passive: false});\n        this.toggleAttribute('open', true)\n        this.#updatePosition();\n    }\n\n    hide() {\n        document.removeEventListener(\"wheel\", this.#preventScrollFunction, {capture: true, passive: false});\n        this.toggleAttribute('open', false)\n        this.#resetCurrentSelection();\n    }\n\n    selectNextItem() {\n        const visibleElements = this.#getVisibleElements();\n        if (!this.hasSelectedElement()) {\n            if (visibleElements.length === 0)\n                return;\n            this.#setSelectedElement(visibleElements[0].dataset.index);\n        } else {\n            const indexOf = visibleElements.indexOf(this.#getSelectedElement());\n            if (visibleElements.length - 1 <= indexOf) // is last item?\n                return;\n            this.#setSelectedElement(visibleElements[indexOf + 1].dataset.index);\n        }\n    }\n\n    selectPrevItem() {\n        const visibleElements = this.#getVisibleElements();\n        if (!this.hasSelectedElement()) {\n            if (visibleElements.length === 0)\n                return;\n            this.#setSelectedElement(visibleElements[visibleElements.length - 1].dataset.index);\n        } else {\n            const indexOf = visibleElements.indexOf(this.#getSelectedElement());\n            if (indexOf === 0) // is first item?\n                return;\n            this.#setSelectedElement(visibleElements[indexOf - 1].dataset.index);\n        }\n    }\n\n    triggerClickOnSelectedItem() {\n        if (this.hasSelectedElement())\n            this.#getSelectedElement().dispatchEvent(new MouseEvent('mousedown'));\n    }\n\n    hasSelectedElement() {\n        return this.#getSelectedElement() != null;\n    }\n\n    isVisible() {\n        return this.hasAttribute('open')\n    }\n\n    onOptionClick(cb) {\n        this.#callbacks.onOptionClick.push(cb);\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#listElement = this.querySelector(\"ul\");\n        this.#addListeners();\n        // This function is needed to stop scrolling all page, except of list-box\n        // Otherwise select and typeahead inputs can be scrolled, but list-box fixed in the page\n        this.#preventScrollFunction = (evt)=> {\n            if (!this.contains(evt.target)) {\n                // When scrolling outside the list-box\n                evt.stopPropagation();\n                evt.preventDefault();\n            } else {\n                const isScrollingUp = evt.deltaY < 0;\n                const isScrollingDown = evt.deltaY > 0;\n                const isListScrolledToItsTop = this.#listElement.scrollTop === 0;\n                const isListScrolledToItsBottom = this.#listElement.scrollTop + this.#listElement.clientHeight >= this.#listElement.scrollHeight;\n                const nothingToScrollUp = isScrollingUp & isListScrolledToItsTop;\n                const nothingToScrollDown = isScrollingDown & isListScrolledToItsBottom;\n                if (nothingToScrollUp || nothingToScrollDown){\n                    evt.stopPropagation();\n                    evt.preventDefault();\n                }\n            }\n        };\n    }\n\n    /**\n     * @param {{displayName:string}[]}values\n     */\n    #setValues(values) {\n        if (typeof this.#comparator === \"function\") {\n            this.#values = [...values].sort(this.#comparator);\n        } else {\n            this.#values = values\n        }\n    }\n\n    #getVisibleElements() {\n        return [...this.#listElement.querySelectorAll('li:not([hidden])')];\n    }\n\n    #addListeners() {\n        this.#listElement.addEventListener(\"mousedown\", (evt)=>{\n            // When we use TypeAhead Input or Select Input in dialog and click on scroll bar, dialog takes focus\n            // and list box is closed. So we need to prevent the default behavior of the mousedown event\n            evt.preventDefault();\n        })\n        for (const li of this.querySelectorAll(\"li\")) {\n            li.addEventListener('mousedown', () => {\n                const option = this.#values[li.dataset.index];\n                this.#callbacks.onOptionClick.forEach(cb => cb(option));\n            });\n        }\n    }\n\n    #htmlTemplate() {\n        return `\n            <ul>\n                ${this.#values.map((value, i) =>\n            safeHtml`<li data-index=\"${i}\" title=\"${value.title || value.displayName}\">${value.displayName}</li>`\n        ).join('')}\n            </ul>`;\n    }\n\n    #updatePosition() {\n        const parentClientRect = this.parentElement.getBoundingClientRect();\n        if (this.#maxItemWidth === 0) // calculate max item width only once\n            this.#maxItemWidth = Math.max(...this.#values.map(value => getTextWidth(value.displayName)), 0);\n        // if parent element width is greater than max item width, set list width to parent width\n        const widthToBe = Math.max(this.#maxItemWidth + 24/*paddings*/ + 22/*scrollbar*/, parentClientRect.width);\n        // max allowed width is the distance from the left side of parent element to the right side of the page\n        const maxAllowedWidth = document.documentElement.clientWidth - parentClientRect.left\n        if (widthToBe > maxAllowedWidth) { // can't fit to the right side, so put it to the left side\n            this.#listElement.style.right = 0;\n        } else {\n            this.#listElement.style.right = null;\n        }\n        this.#listElement.style.width = `${Math.min(widthToBe, document.documentElement.clientWidth)}px`;\n        this.style.width = `${Math.min(widthToBe, document.documentElement.clientWidth)}px`;\n        this.style.top = `${parentClientRect.top}px`;\n    }\n\n    #getSelectedElement() {\n        return this.querySelector(`li[data-index=\"${this.#selectedElementIndex}\"]`);\n    }\n\n    #setSelectedElement(elementIndex) {\n        this.#resetCurrentSelection();\n        this.#selectedElementIndex = elementIndex;\n        const element = this.#getSelectedElement();\n        element.classList.add('list-box__item--active');\n        element.scrollIntoView({block: \"nearest\"});\n    }\n\n    #resetCurrentSelection() {\n        if (this.#selectedElementIndex >= 0) {\n            const selectedElement = this.#getSelectedElement();\n            selectedElement.classList.remove('list-box__item--active');\n            this.#selectedElementIndex = -1;\n        }\n    }\n\n    #getMarkedText(text, startIndex, length) {\n        if (startIndex >= 0) {\n            const before = text.substring(0, startIndex);\n            const match = text.substring(startIndex, startIndex + length);\n            const after = text.substring(startIndex + length);\n            // wrap whole text in span to prevent swallowing spaces\n            return safeHtml`<span>${before}<mark>${match}</mark>${after}</span>`;\n        } else {\n            return text;\n        }\n    }\n\n    static get is() {\n        return 'list-box';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(ListBox.is)){\n    window.customElements.define(ListBox.is, ListBox);\n}\n","import '../TextInput/TextInput.js';\nimport '../ListBox/ListBox.js';\nimport { KeyCode, safeHtml } from \"../utils.js\"\n\nexport default class TypeAheadInput extends HTMLElement {\n    /**\n     * @type {TextInput}\n     */\n    #inputElement;\n    /**\n     * @type {ListBox}\n     */\n    #dropdownElement;\n    #currentValue;\n    #lastValidValue = null;\n    #shouldMatchOptions;\n    #callbacks = {\n        onChangeValue: []\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"text-input\");\n        this.#dropdownElement = this.querySelector(\"list-box\");\n        this.#shouldMatchOptions = this.hasAttribute(\"shouldMatchOptions\")\n        this.#addListeners();\n    }\n\n    get value() {\n        return this.#currentValue;\n    }\n\n    get rawValue() {\n        return this.#inputElement.value;\n    }\n\n    set value(value) {\n        this.#currentValue = value;\n        this.#inputElement.value = value && value.displayName ? value.displayName : \"\";\n    }\n\n    /**\n     * Sets the initial value of the input, as well as the last valid value.\n     */\n    set initialValue(value) {\n        this.value = value;\n        this.#lastValidValue = value;\n    }\n\n    set options(options) {\n        this.#dropdownElement.options = options;\n        this.#filterDatalist();\n    }\n\n    set errorMessage(message) {\n        this.#inputElement.errorMessage = message;\n    }\n\n    checkValidity() {\n        return this.#validate() && this.#inputElement.checkValidity();\n    }\n\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    /** @param {boolean} isDisabled */\n    setDisabled(isDisabled) {\n        this.toggleAttribute(\"disabled\", isDisabled);\n        this.#inputElement.setDisabled(isDisabled);\n    }\n\n\n    #onInput() {\n        this.errorMessage = \"\";\n        this.#filterDatalist();\n        if (!this.#dropdownElement.isVisible())\n            this.#dropdownElement.show();\n    }\n\n    #onFocus() {\n        this.#filterDatalist();\n        this.#dropdownElement.show();\n    }\n\n    #onBlur() {\n        this.#hideDropdownAndValidate();\n    }\n\n    #onOptionClick(option) {\n        this.value = option;\n        this.#hideDropdownAndValidate();\n    }\n\n    #onClearIconClick() {\n        this.value = {displayName: \"\"};\n        this.#inputElement.querySelector('input').focus();\n    }\n\n    #onKeydown(event) {\n        if ([KeyCode.Up, KeyCode.Down].includes(event.code)) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n        switch (event.key) {\n            case KeyCode.Esc: {\n                this.#hideDropdownAndValidate();\n                break;\n            }\n            case KeyCode.Enter: {\n                if (this.#dropdownElement.isVisible())\n                    if (this.#dropdownElement.hasSelectedElement())\n                        this.#dropdownElement.triggerClickOnSelectedItem();\n                    else\n                        this.#hideDropdownAndValidate();\n                break;\n            }\n            case KeyCode.Down: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectNextItem();\n                break;\n            }\n            case KeyCode.Up: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectPrevItem();\n                break;\n            }\n        }\n    }\n\n    #onInputValueChange() {\n        this.#validateAndNotify();\n    }\n\n    #hideDropdownAndValidate() {\n        this.#dropdownElement.hide();\n        this.#validateAndNotify();\n    }\n\n    #validateAndNotify() {\n        if (this.#validate() && this.#isValueChanged()) {\n            this.#lastValidValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value));\n        }\n    }\n\n    #validate() {\n        const inputText = this.#inputElement.value;\n        if (inputText === \"\") {\n            this.#currentValue = null;\n            return true; // assume that value is valid if it is empty, otherwise required attribute should be set\n        }\n        if (this.value && this.value.displayName === inputText) {\n            this.errorMessage = \"\";\n            return true; // assume that value is valid if it is the same as the initial value\n        }\n        if (!this.#shouldMatchOptions) {\n            this.errorMessage = \"\";\n            this.#currentValue = {displayName: inputText};\n            return true; // assume that value is valid if it should not match to any option\n        }\n        for (const option of this.#dropdownElement.options) {\n            if (option.displayName === inputText) {\n                this.errorMessage = \"\";\n                this.#currentValue = option;\n                this.#inputElement.value = option.displayName;\n                return true;\n            }\n        }\n        this.#currentValue = null;\n        this.errorMessage = \"Select from list\";\n        return false;\n    }\n\n    #filterDatalist() {\n        // We use attribute \"nofiltering\" when make filtration ourselves\n        if (this.hasAttribute('nofiltering'))\n            return\n        this.#dropdownElement.filter = this.#inputElement.value;\n    }\n\n    #isValueChanged() {\n        return this.#lastValidValue !== this.value;\n    }\n\n    #addListeners() {\n        const input = this.#inputElement.querySelector(\"input\");\n        this.addEventListener(\"keydown\", this.#onKeydown.bind(this));\n        this.addEventListener(\"keyup\", (event)=>{event.stopPropagation()});\n        input.addEventListener(\"input\", this.#onInput.bind(this));\n        input.addEventListener(\"blur\", this.#onBlur.bind(this));\n        input.addEventListener('focus', this.#onFocus.bind(this));\n        this.#inputElement.onTrailingIconClick(this.#onClearIconClick.bind(this));\n        this.#inputElement.onChangeValue(this.#onInputValueChange.bind(this));\n        this.#dropdownElement.onOptionClick(this.#onOptionClick.bind(this));\n    }\n\n    #htmlTemplate() {\n        const requiredAttribute = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const disabledAttribute = this.hasAttribute(\"disabled\") ? \"disabled\" : \"\";\n        const iconName = this.hasAttribute(\"no-icon\") ? \"\" : \"close\";\n        return safeHtml`\n            <text-input \n                class=\"text-input--with-right-icon\" \n                label=\"${this.getAttribute(\"label\")}\" \n                ${requiredAttribute}\n                ${disabledAttribute}\n                data-icon=\"${iconName}\"\n                autocomplete=\"off\"\n            ></text-input>\n            <list-box></list-box>`;\n    }\n\n    static get is() {\n        return 'typeahead-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(TypeAheadInput.is)){\n    window.customElements.define(TypeAheadInput.is, TypeAheadInput);\n}\n","import {KeyCode, safeHtml} from \"../utils.js\";\n\nexport default class SelectInput extends HTMLElement {\n    #inputElement;\n    #dropdownElement;\n    #currentValue;\n    #lastValidValue = null;\n\n    #callbacks = {\n        onShowDropdown: [],\n        onChangeValue: []\n    }\n\n    get value() {\n        return this.#currentValue;\n    }\n\n    set value(value) {\n        this.#inputElement.value = value && value.displayName ? value.displayName : \"\";\n        this.#currentValue = value;\n    }\n\n    set options(options) {\n        this.#dropdownElement.options = options;\n    }\n\n    /** @param {function|null} comparator */\n    set comparator(comparator) {\n        this.#dropdownElement.comparator = comparator;\n    }\n\n    /** @param {boolean} isDisabled */\n    setDisabled(isDisabled) {\n        this.toggleAttribute(\"disabled\", isDisabled);\n        this.#inputElement.setDisabled(isDisabled);\n    }\n\n    showDropdown() {\n        this.#dropdownElement.show();\n        this.#callbacks.onShowDropdown.forEach(callback => callback());\n    }\n\n    onShowDropdown(callback) {\n        this.#callbacks.onShowDropdown.push(callback);\n    }\n\n    onChangeValue(callback) {\n        this.#callbacks.onChangeValue.push(callback);\n    }\n\n    checkValidity() {\n        return this.#validate();\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#inputElement = this.querySelector(\"text-input\");\n        this.#dropdownElement = this.querySelector(\"list-box\");\n        this.#addListeners();\n    }\n\n    #addListeners() {\n        this.addEventListener(\"keydown\", this.#onKeydown.bind(this));\n        const input = this.#inputElement.querySelector(\"input\");\n        input.addEventListener('focus', this.#onFocus.bind(this));\n        input.addEventListener(\"focusout\", this.#onFocusout.bind(this));\n        input.addEventListener(\"click\", this.#onInputClick.bind(this));\n        this.#dropdownElement.onOptionClick(this.#onOptionClick.bind(this));\n    }\n\n    #onFocus() {\n        this.showDropdown();\n    }\n\n    #onFocusout() {\n        this.#hideDropdownAndValidate();\n    }\n\n    #onOptionClick(option) {\n        this.#inputElement.value = option.displayName;\n        this.#currentValue = option;\n        this.#hideDropdownAndValidate();\n    }\n\n    #onInputClick() {\n        this.showDropdown();\n    }\n\n    #onKeydown(event) {\n        if ([KeyCode.Up, KeyCode.Down].includes(event.code)) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n        switch (event.key) {\n            case KeyCode.Esc: {\n                event.preventDefault();\n                this.#hideDropdownAndValidate();\n                this.#inputElement.focus();\n                break;\n            }\n            case KeyCode.Enter: {\n                if (this.#dropdownElement.isVisible()) {\n                    event.stopPropagation();\n                    if (this.#dropdownElement.hasSelectedElement())\n                        this.#dropdownElement.triggerClickOnSelectedItem();\n                    else\n                        this.#dropdownElement.hide();\n                }\n                break;\n            }\n            case KeyCode.Down: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectNextItem();\n                break;\n            }\n            case KeyCode.Up: {\n                if (!this.#dropdownElement.isVisible())\n                    this.#dropdownElement.show();\n                this.#dropdownElement.selectPrevItem();\n                break;\n            }\n        }\n    }\n\n    #hideDropdownAndValidate() {\n        this.#dropdownElement.hide();\n        this.#validateAndNotify();\n    }\n\n    #validateAndNotify() {\n        if (this.#validate() && this.#lastValidValue !== this.value) {\n            this.#lastValidValue = this.value;\n            this.#callbacks.onChangeValue.forEach(callback => callback(this.value))\n        }\n    }\n\n    #validate() {\n        if (this.#inputElement.hasAttribute(\"required\") && !this.#inputElement.value)\n            this.#inputElement.errorMessage = \"Required\";\n        else\n            this.#inputElement.errorMessage = \"\";\n        return this.#inputElement.checkValidity();\n    }\n\n    #htmlTemplate() {\n        const requiredAttribute = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const disabledAttribute = this.hasAttribute(\"disabled\") ? \"disabled\" : \"\";\n        return safeHtml`\n            <text-input\n                class=\"text-input--select\" \n                label=\"${this.getAttribute(\"label\")}\" \n                ${requiredAttribute}\n                ${disabledAttribute}\n                data-icon=\"arrow_drop_down\"\n                readonly\n            ></text-input>\n            <list-box></list-box>`;\n    }\n\n    static get is() {\n        return 'select-input';\n    }\n}\n\n// Checking, is a custom element already defined\nif(!window.customElements.get(SelectInput.is)){\n    window.customElements.define(SelectInput.is, SelectInput);\n}\n","import {getTextWidth, KeyCode, roundToDecimalPlaces} from \"../utils.js\";\n\nexport default class EditText extends HTMLElement {\n    #children;\n    #isValid = true;\n    #lastEnteredValue;\n    #suffix = \"\";\n    #prefix = \"\";\n    #displayTextTransformer = (value) => value;\n\n    #resizeObserver = new ResizeObserver(this.#updatePopupPosition.bind(this));\n\n    #callbacks = {\n        onChangeValue: []\n    }\n\n    connectedCallback() {\n        this.innerHTML = this.#htmlTemplate();\n        this.#children = {\n            text: this.querySelector(\".edit-text__text\"),\n            popup: this.querySelector(\".edit-text__popup\"),\n            input: this.querySelector('text-input')\n        };\n        this.#addListeners();\n        this.#resizeObserver.observe(document.body);\n        this.#initAttributes();\n        this.#updateTextValue();\n    }\n\n    disconnectedCallback() {\n        this.#resizeObserver.unobserve(document.body);\n    }\n\n    onChange(cb) {\n        this.#callbacks.onChangeValue.push(cb);\n    }\n\n    checkValidity() {\n        return this.#children.input.checkValidity();\n    }\n\n    /** @param {boolean} isIncorrect */\n    toggleIncorrectAttribute(isIncorrect) {\n        this.toggleAttribute('incorrect', isIncorrect)\n    }\n\n    /**\n     * @deprecated\n     * @param {InputValidator} validator\n     * */\n    addExternalValidator(validator) {\n        this.#children.input.addValidator(validator);\n    }\n\n    /** @param {InputValidator} validator */\n    addValidator(validator) {\n        this.#children.input.addValidator(validator);\n    }\n\n    get value() {\n        return this.#children.input.value;\n    }\n\n    set value(value) {\n        this.#children.input.value = value;\n        this.#updateTextValue();\n    }\n\n    set displayTextTransformer(f) {\n        this.#displayTextTransformer = f;\n    }\n\n    #getValueAttr() {\n        return this.getAttribute(\"value\");\n    }\n\n    #getDisplayName() {\n        let val = this.#displayTextTransformer(this.#getValueAttr());\n        if (this.#isNumberType())\n            val = +val;\n        return `${this.#prefix}${val}${this.#suffix}`\n    }\n\n    #addListeners() {\n        this.#children.text.addEventListener(\"click\", this.#showPopup.bind(this));\n        // Beware of \"mousedown\" because click event still could be triggered on the element below edit-text\n        this.addEventListener('click', this.#onClickOutsideOfInput.bind(this));\n        this.#children.popup.addEventListener('keydown', this.#onKeydown.bind(this));\n        this.#children.input.onInput(this.#onInput.bind(this));\n        this.#children.popup.addEventListener(\"cancel\", this.#onEscape.bind(this));\n    }\n\n    #showPopup() {\n        this.toggleIncorrectAttribute(false);\n        this.#updateInputValue();\n        this.#updatePopupPosition();\n        this.#children.popup.showModal();\n        this.#children.input.focus();\n    }\n\n    #onInput(_, isValid) {\n        this.#isValid = isValid;\n    }\n\n    #onEscape() {\n        this.#children.input.value = this.#lastEnteredValue;\n    }\n\n    #onEnter() {\n        if (this.checkValidity()) {\n            this.#children.popup.close();\n            this.#updateDisplayTextAndNotifyIfChanged();\n        }\n    }\n\n    #onClickOutsideOfInput(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.target !== this.#children.popup)\n            return;\n        this.#children.popup.close();\n        this.#updateDisplayTextAndNotifyIfChanged();\n    }\n\n    #updateDisplayTextAndNotifyIfChanged() {\n        if (!this.#isValid){\n            this.#children.input.value = this.#getValueAttr();\n            return\n        }\n        if (this.#getValueAttr() !== this.#children.input.value && this.#children.input.value.length) {\n            this.#updateTextValue();\n            this.#callbacks.onChangeValue.forEach(cb => cb(this.#getValueAttr()));\n        }\n        const value = this.#children.input.rawValue;\n        if (value.length === 0 && !this.#children.input.hasAttribute(\"required\")) {\n            this.#setEmptyValue();\n        } else {\n            this.#lastEnteredValue = value;\n            this.#children.text.toggleAttribute('empty-value', false)\n        }\n    }\n\n    #setEmptyValue() {\n        this.#children.text.textContent = \"set\";\n        this.#children.text.toggleAttribute('empty-value', true)\n        this.removeAttribute('value');\n        this.removeAttribute('title');\n    }\n\n    #onKeydown(evt) {\n        evt.stopPropagation();\n        if (evt.repeat) return\n        if (evt.key === KeyCode.Enter && !evt.repeat && this.#isValid)\n            this.#onEnter();\n    }\n\n    #updateInputValue() {\n        if (this.hasAttribute('value')) {\n            this.#lastEnteredValue = this.getAttribute(\"value\");\n            this.#children.input.value = this.#lastEnteredValue;\n        }\n    }\n\n    #updateTextValue() {\n        this.setAttribute(\"value\", this.#children.input.value);\n        this.setAttribute('title', this.#children.input.value);\n        this.#children.text.toggleAttribute('empty-value', false)\n        let value = this.#getValueAttr();\n        if (typeof value === \"string\" && value.length > 0) {\n            this.#children.text.textContent = this.#getDisplayName();\n        } else {\n            this.#setEmptyValue();\n        }\n    }\n\n    #updatePopupPosition() {\n        let {top, left} = this.getBoundingClientRect();\n        this.#children.popup.style.top = top + window.scrollY + \"px\";\n        this.#children.popup.style.left = left + window.scrollX + \"px\";\n        if (!this.hasAttribute('max-width')) {\n            this.#children.popup.style['max-width'] = Math.max(this.offsetWidth + 16, 128) + \"px\";\n        } else {\n            this.#children.popup.style.width = getTextWidth(this.#children.input.rawValue) + 16 + \"px\";\n        }\n    }\n\n    #isNumberType() {\n        return this.getAttribute(\"type\") === \"number\"\n    }\n\n    #initAttributes() {\n        if (this.hasAttribute(\"suffix\"))\n            this.#suffix = this.getAttribute(\"suffix\");\n        if (this.hasAttribute(\"prefix\"))\n            this.#prefix = this.getAttribute(\"prefix\");\n        if (this.hasAttribute(\"max-width\")) {\n            this.#children.popup.style['max-width'] = this.getAttribute(\"max-width\") + 'px';\n            this.#children.input.style['max-width'] = this.getAttribute(\"max-width\") - 16 + 'px';\n        }\n        if (this.hasAttribute(\"min-width\")) {\n            this.#children.popup.style['min-width'] = this.getAttribute(\"min-width\") + 'px';\n            this.#children.input.style['min-width'] = this.getAttribute(\"min-width\") - 16 + 'px';\n        }\n\n        this.#children.input.value = this.#getValueAttr();\n        if (this.hasAttribute(\"scale\"))\n            this.displayTextTransformer = (text) => roundToDecimalPlaces(text, parseInt(this.getAttribute(\"scale\")));\n    }\n\n    #htmlTemplate() {\n        const requiredAttr = this.hasAttribute(\"required\") ? \"required\" : \"\";\n        const typeAttr = this.getAttribute(\"type\") || \"text\";\n        let stepAttr = \"\";\n        if (this.hasAttribute(\"step\"))\n            stepAttr = `step=\"${this.getAttribute(\"step\")}\"`\n        let minAttr = \"\";\n        if (this.hasAttribute(\"min\"))\n            minAttr = `min=\"${this.getAttribute(\"min\")}\"`\n        let maxAttr = \"\";\n        if (this.hasAttribute(\"max\"))\n            maxAttr = `max=\"${this.getAttribute(\"max\")}\"`\n        let minLengthAttr = \"\";\n        if (this.hasAttribute(\"minlength\"))\n            minLengthAttr = `minlength=\"${this.getAttribute(\"minlength\")}\"`\n        let maxLengthAttr = \"\";\n        if (this.hasAttribute(\"maxlength\"))\n            maxLengthAttr = `maxlength=\"${this.getAttribute(\"maxlength\")}\"`\n        let patternAttr = \"\";\n        if (this.hasAttribute(\"pattern\"))\n            patternAttr = `pattern=\"${this.getAttribute(\"pattern\")}\"`\n        let numberTypeAttr = \"\";\n        if (this.hasAttribute(\"number-type\"))\n            numberTypeAttr = `number-type=\"${this.getAttribute(\"number-type\")}\"`\n        return `<span class=\"edit-text__text\"></span>\n                <dialog class=\"edit-text__popup\" tabindex=\"9\">\n                        <text-input \n                            class=\"text-input--with-right-icon\" \n                            label=\"\" \n                            autocomplete=\"off\"\n                            ${requiredAttr}\n                            ${stepAttr}\n                            ${minAttr}\n                            ${maxAttr}\n                            ${minLengthAttr}\n                            ${maxLengthAttr}\n                            ${patternAttr}\n                            ${numberTypeAttr}\n                            type=\"${typeAttr}\"\n                        ></text-input>\n                </dialog>`;\n    }\n\n    static get is() {\n        return 'edit-text';\n    }\n}\n\n// Checking, is a custom element already defined\nif (!window.customElements.get(EditText.is)) {\n    window.customElements.define(EditText.is, EditText);\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","TextInputValidityState","constructor","textInput","this","querySelector","isValid","errorMessage","checkValidity","setCustomValidity","validity","valid","message","badInput","customError","patternMismatch","typeMismatch","rangeOverflow","rangeUnderflow","tooLong","tooShort","valueMissing","stepMismatch","cv","assign","trimmedText","trim","hasAttribute","type","min","max","numberType","getAttribute","Number","isInteger","valueAsNumber","validityState","isTypeNumber","step","maxLength","minLength","validationMessage","KeyCode","freeze","safeHtml","strings","values","result","i","length","unsafe","String","replace","getTextWidth","text","span","document","createElement","body","appendChild","textContent","style","fontSize","visibility","position","width","Math","ceil","getBoundingClientRect","remove","TextInput","HTMLElement","static","Set","onTrailingIconClick","onChangeValue","onInput","connectedCallback","innerHTML","disconnectedCallback","setAttribute","window","removeEventListener","bind","capture","addValidator","validator","push","rawValue","isFinite","isFiniteNumber","validate","focus","callback","options","setDisabled","isDisabled","toggleAttribute","event","Up","Down","preventDefault","Enter","repeat","forEach","attribute","attributes","has","name","classList","add","addEventListener","activeElement","blur","trailingIconName","is","customElements","ListBox","a","b","displayName","localeCompare","onOptionClick","comparator","filter","searchString","toLowerCase","li","querySelectorAll","dataset","index","indexOf","selectedElement","scrollIntoView","block","show","passive","hide","selectNextItem","visibleElements","hasSelectedElement","selectPrevItem","triggerClickOnSelectedItem","dispatchEvent","MouseEvent","isVisible","cb","evt","contains","target","isScrollingUp","deltaY","isScrollingDown","isListScrolledToItsTop","scrollTop","isListScrolledToItsBottom","clientHeight","scrollHeight","stopPropagation","sort","option","map","title","join","parentClientRect","parentElement","widthToBe","maxAllowedWidth","documentElement","clientWidth","left","right","top","elementIndex","element","startIndex","before","substring","match","after","TypeAheadInput","initialValue","includes","code","stopImmediatePropagation","Esc","inputText","input","requiredAttribute","disabledAttribute","iconName","SelectInput","onShowDropdown","showDropdown","EditText","ResizeObserver","popup","observe","unobserve","onChange","toggleIncorrectAttribute","isIncorrect","addExternalValidator","displayTextTransformer","f","val","showModal","_","close","removeAttribute","scrollY","scrollX","offsetWidth","number","decimalPlaces","multiplier","pow","round","roundToDecimalPlaces","parseInt","requiredAttr","typeAttr","stepAttr","minAttr","maxAttr","minLengthAttr","maxLengthAttr","patternAttr","numberTypeAttr"],"sourceRoot":""}
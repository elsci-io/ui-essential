{"version":3,"file":"bundle.css","mappings":";AAAQ,YCCJ,aACA,kBACA,SACA,6BACA,iDACA,0BACA,iBACA,UACA,sBACA,yCACA,UACA,gBAGA,eAGJ,YACI,aACA,mBACA,iBACA,gBACA,yCACA,eACA,iDAGJ,oBACI,aAGJ,0CACI,uDAGJ,iBACI,gBACA,uBCtCJ,WAGI,sCAEA,sCACA,0CAIA,kBAEA,oBACA,eAGA,cACA,gBAGJ,mBACI,WACA,sBAEA,YACA,6BAEA,aAGA,4DACA,eACA,yCAEJ,6BACI,WACA,eACA,gBAEJ,yBACI,6CAEJ,gCAGI,oBACA,iBACA,yBAEJ,6DAEI,sCAEJ,mBACI,kBACA,sCACA,eACA,OACA,SAIA,oBACA,qBACA,uEACA,2BAEJ,0EAEI,sCAEJ,4CAEI,uEACA,6CACA,2BAEJ,8DAEI,uEACA,6CAEJ,gDAEI,uEACA,6CAEJ,8CAEI,sCAGJ,2BACI,wDAGJ,kFAEI,sCAGJ,mBACI,SACA,6CACA,4CACA,sCACA,oDACA,iBAGJ,uFACI,mBAGJ,2BACI,kBACA,QACA,YACA,eACA,eACA,2CAGJ,gDACI,wBAGJ,wCACI,2BAIJ,sJAGI,wBACA,SACA,qCAGJ,iCACI,yCAGJ,sEACI,aAGJ,4EACI,cAGJ,6BACI,eAGJ,2BACI,8DACQ,CC9JZ,aACI,YACA,WACA,qBAGJ,sBACI,aACA,qBAGJ,wBACI,eAGJ,mDACI,oBChBJ,gBACI,qBACA,WACA,YAGJ,yBACI,aACA,qBACA,kBAGJ,8DACI,oBCbJ,UACE,qBACA,eAGF,kBACE,eACA,eACA,WACA,6BACA,kBACA,YACA,4BACA,UAGF,6BACE,wBACA,cACA,wBAGF,qCACE,aAGF,4BACE,yBAGF,kEACE,gBAGF,2BACE,0BACA,eACA,mBAGF,qCACE,qBACA,eACA,oBAGF,sCACE,sCAGF,8BACE,kBClDF,oBACI,6CACA,mDACA,uDACA,iDACA,0DACA,UACA,aACA,eACA,QACA,SACA,OACA,aACA,kBACA,uBACA,sBACA,sBACA,oBAGJ,UACI,mBACA,aACA,kDACA,gBACA,6BACA,gBACA,kBACA,aACA,mBACA,2BAGJ,4CACI,mBACI,gBAIR,iBACI,uCAGJ,iBACI,kBACA,oBACA,gBACA,uBACA,YACA,sBACA,SACA,aAIJ,mBACI,kBACA,mBACA,aACA,cACA,mBACA,sBAGJ,qBACI,4CACA,wCACA,YACA,eACA,mBACA,qBACA,mBAGJ,+DACI,YACA,iDACA,oBAGJ,yDACI,kDAGJ,wBACI,4CACA,uCACA,YACA,eACA,eACA,aACA,cACA,kBACA,UNtFJ,iBACE,wB","sources":["webpack://elsciUi/./src/style.scss","webpack://elsciUi/./src/ListBox/ListBox.scss","webpack://elsciUi/./src/TextInput/TextInput.scss","webpack://elsciUi/./src/SelectInput/SelectInput.scss","webpack://elsciUi/./src/TypeAheadInput/TypeAheadInput.scss","webpack://elsciUi/./src/EditText/EditText.scss","webpack://elsciUi/./src/SnackBar/SnackBar.scss"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0');\n@import './ListBox/ListBox.scss';\n@import './TextInput/TextInput.scss';\n@import './SelectInput/SelectInput.scss';\n@import './TypeAheadInput/TypeAheadInput.scss';\n@import './EditText/EditText.scss';\n@import './SnackBar/SnackBar.scss';\n\n.visually-hidden {\n  display: none !important;\n}","list-box ul {\n    display: grid;\n    position: absolute;\n    margin: 0;\n    box-shadow: var(--box-shadow);\n    background-color: var(--theme-element-background);\n    grid-template-columns: 1fr;\n    max-height: 10rem;\n    padding: 0;\n    border-radius: 0.375rem;\n    color: var(--theme-text-primary-on-light);\n    z-index: 9;\n    overflow-y: auto;\n    // For now we want to limit dropdown width to 100%, but previous logic is not removed, and we can return to\n    // calculated width if necessary.\n    max-width: 100%;\n}\n\nlist-box li {\n    display: flex;\n    align-items: center;\n    padding: 0 0.75rem;\n    min-height: 2rem;\n    color: var(--theme-text-primary-on-light);\n    cursor: pointer;\n    background-color: var(--theme-element-background);\n}\n\nlist-box li[hidden] {\n    display: none;\n}\n\nlist-box li:hover, .list-box__item--active {\n    background-color: var(--list-background-on-hover-color);\n}\n\nlist-box li mark {\n    font-weight: 600;\n    background-color: unset;\n}","text-input {\n    /*We probably shouldn't do it, but the label can be declared outside of md-text-input when it relates\n    to several fields at the time. So declaring the var at the root level for now.*/\n    --text-input__small-font-size: .75rem;\n    /*We use another line height for errors because if line-height = font-size, error message is hidden at the bottom*/\n    --text-input__error-line-height: 1rem;\n    --text-input__label__left-padding: .25rem;\n    /*we need to use transform for labels, and they work only for absolutely positioned elements.\n    And those in turn need some non-statically position parent - otherwise it'll be positioned relative\n    to some other grand-parent and will fly away somewhere*/\n    position: relative;\n    /*leaving space for label to fly to when the field is active*/\n    padding-top: 1.25rem;\n    font-size: 1rem;\n    /*  Html template of this component has its own style where \"display : none\" this trick allows element\n     to be hidden until main css file is loaded */\n    display: block;\n    overflow-x: clip;\n}\n\n.text-input__input {\n    width: 100%;\n    box-sizing: border-box;\n\n    border: none;\n    border-bottom: 1px solid #DDD;\n    /*when input is focused it has an outline which we don't want*/\n    outline: none;\n    /* without line-height highlight in input looks better */\n    //line-height: 1.5rem;\n    padding: .1rem 0 .1em var(--text-input__label__left-padding);\n    font-size: 1rem;\n    color: var(--theme-text-primary-on-light);\n}\n.text-input__input[disabled] {\n    opacity : .5;\n    cursor  : default;\n    background: white;\n}\n.text-input__input:focus {\n    border-bottom: 1px solid var(--theme-primary);\n}\n.text-input__input::placeholder {\n    /*We need a placeholder because it's the only way of checking if something is entered into the field w/o\n     using JS. There's a pseudo-class :placeholder-shown which allows us to control where the label is positioned.*/\n    color: transparent;\n    user-select: none;\n    -webkit-user-select: none;\n}\ntext-input.placeholder-shown .text-input__input::placeholder {\n    /* If we need a real placeholder, we set color to it. */\n    color: var(--theme-text-hint-on-light);\n}\n.text-input__label {\n    position: absolute;\n    color: var(--theme-text-hint-on-light);\n    bottom: 2.25rem;\n    left: 0;\n    margin: 0;\n\n    /*Label overlays the input and acts like a placeholder, so to act as a placeholder it should\n    behave as if it didn't exist. */\n    pointer-events: none;\n    transform-origin: 0 0;\n    transform: translate3d(var(--text-input__label__left-padding), 1rem, 0);\n    transition: .1s ease-in-out;\n}\n.text-input__input:not(:focus):not(:placeholder-shown)+.text-input__label {\n    /*when we entered something and leave the field it's better to make the label grey instead of black*/\n    color: var(--theme-text-hint-on-light);\n}\n.text-input__input:focus + .text-input__label {\n    /*when we focus on the input, the label should jump on top of the field*/\n    transform: translate(var(--text-input__label__left-padding), -0.375rem);\n    font-size: var(--text-input__small-font-size);\n    color: var(--theme-primary);\n}\n.text-input__input:not(:placeholder-shown) + .text-input__label {\n    /*when placeholder isn't shown - it means we entered something into the field, so the label must stay at the top*/\n    transform: translate(var(--text-input__label__left-padding), -0.375rem);\n    font-size: var(--text-input__small-font-size);\n}\ntext-input.placeholder-shown .text-input__label {\n    /*when input has real placeholder, input label must be in the top all time*/\n    transform: translate(var(--text-input__label__left-padding), -0.375rem);\n    font-size: var(--text-input__small-font-size);\n}\n.text-input__input:invalid + .text-input__label {\n    /*when we focus on the input, the label should jump on top of the field*/\n    color: var(--theme-input-border-error);\n}\n\n.text-input__input:invalid {\n    border-bottom: 1px solid var(--theme-input-border-error);\n}\n\n.text-input__input:invalid:not(:focus):not(:placeholder-shown)+.text-input__label {\n    /*when we entered something and leave the field it's better to make the label grey instead of black*/\n    color: var(--theme-input-border-error);\n}\n\n.text-input__error {\n    margin : 0;\n    font-size: var(--text-input__small-font-size);\n    height: var(--text-input__error-line-height);\n    color: var(--theme-input-border-error);\n    padding-left: var(--text-input__label__left-padding);\n    text-align: start;\n}\n\n.text-input--with-right-icon .text-input__input, .text-input--select .text-input__input {\n    padding-right: 1rem;\n}\n\n.text-input__trailing-icon {\n    position: absolute;\n    right: 0;\n    bottom: 1rem;\n    font-size: 1rem;\n    cursor: pointer;\n    color: var(--theme-text-secondary-on-light);\n}\n\ntext-input[disabled] .text-input__trailing-icon {\n    display: none !important;\n}\n\ntext-input[disabled] .text-input__input {\n    padding-right: 0 !important;\n}\n\n/* Hide stepper buttons */\n.text-input__input[type='number']::-webkit-outer-spin-button,\n.text-input__input[type='number']::-webkit-inner-spin-button,\n.text-input__input[type='number'] {\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield !important;\n}\n\n.text-input__trailing-icon:hover {\n    color: var(--theme-text-primary-on-light);\n}\n\n.text-input__input:placeholder-shown + label + .text-input__trailing-icon {\n    display: none;\n}\n\n.text-input__input:not(:placeholder-shown) + label + .text-input__trailing-icon {\n    display: block;\n}\n\n.text-input__input[readonly] {\n    cursor: pointer;\n}\n\n.material-symbols-outlined {\n    font-variation-settings:\n            'FILL' 0,\n            'wght' 400,\n            'GRAD' 0,\n            'opsz' 48\n}","select-input {\n    height: 4rem;\n    width: 100%;\n    display: inline-block;\n}\n\nselect-input list-box {\n    display: none;\n    margin-top: -0.875rem;\n}\n\nselect-input text-input {\n    cursor: pointer;\n}\n\nselect-input text-input .text-input__trailing-icon{\n    pointer-events: none;\n}\n","typeahead-input {\n    display: inline-block;\n    width: 100%;\n    height: 4rem;\n}\n\ntypeahead-input list-box {\n    display: none;\n    margin-top: -0.825rem;\n    position: relative;\n}\n\ntypeahead-input.dropdown-select text-input .text-input__input {\n    pointer-events: none;\n}","edit-text {\n  display: inline-block;\n  max-width: 100%;\n}\n\n.edit-text__popup {\n  max-width: 100%;\n  min-width: 8rem;\n  width: auto;\n  box-shadow: var(--box-shadow);\n  position: absolute;\n  border: none;\n  margin: -0.7rem 0 0 -0.75rem;\n  padding: 0;\n}\n\n.edit-text__popup text-input {\n  width: calc(100% - 1rem);\n  padding-top: 0;\n  margin: .5rem .5rem 1rem;\n}\n\n.edit-text__popup .text-input__error {\n  height: unset;\n}\n\n.edit-text__popup::backdrop {\n  background: transparent;\n}\n\n.edit-text__popup .text-input--with-right-icon .text-input__input {\n  padding-right: 0;\n}\n\nedit-text .edit-text__text {\n  text-decoration: underline;\n  cursor: pointer;\n  font-weight: normal;\n}\n\nedit-text[disabled] .edit-text__text {\n  text-decoration: none;\n  cursor: default;\n  pointer-events: none;\n}\n\nedit-text[incorrect] .edit-text__text{\n  color: var(--theme-input-border-error);\n}\n\n.edit-text__text[empty-value] {\n  font-style: italic;\n}\n","\n.snackbar-container {\n    --snackbar-background-color: rgb(51, 51, 51);\n    --snackbar-background-color-hover: rgb(84, 84, 84);\n    --snackbar-text-label-color: rgba(255, 255, 255, 0.87);\n    --snackbar-text-action-color: rgb(187, 134, 252);\n    --snackbar-text-action-disabled-color: rgb(140, 140, 140);\n    z-index : 8;\n    margin : 0.5rem;\n    position : fixed;\n    right : 0;\n    bottom : 0;\n    left : 0;\n    display : flex;\n    align-items : start;\n    justify-content : center;\n    box-sizing : border-box;\n    flex-direction: column;\n    pointer-events: none;\n}\n\n.snackbar {\n    pointer-events: all;\n    margin: 0.5rem;\n    background-color : var(--snackbar-background-color);\n    min-width : 344px;\n    box-shadow : var(--box-shadow);\n    max-width : 672px;\n    border-radius : 4px;\n    display : flex;\n    align-items : center;\n    justify-content : flex-start;\n}\n\n@media (max-width : 480px), (max-width : 344px){\n    .snackbar__surface{\n        min-width : 100%;\n    }\n}\n\n.snackbar__label{\n    color : var(--snackbar-text-label-color);\n}\n\n.snackbar__label{\n    font-size : 0.875rem;\n    line-height : 1.25rem;\n    font-weight : 400;\n    letter-spacing : 0.012rem;\n    flex-grow : 1;\n    box-sizing : border-box;\n    margin : 0;\n    padding : 1rem;\n}\n\n\n.snackbar__buttons {\n    margin-left : 0.5rem;\n    margin-right : 0.5rem;\n    display : flex;\n    flex-shrink : 0;\n    align-items : center;\n    box-sizing : border-box;\n}\n\n.snackbar__button-ok {\n    background: var(--snackbar-background-color);\n    color : var(--snackbar-text-action-color);\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    border-radius: 0.25rem;\n    margin-right: 0.5rem;\n}\n\n.snackbar__button-ok:disabled, .snackbar__button-close:disabled {\n    border: none;\n    color: var(--snackbar-text-action-disabled-color);\n    pointer-events: none;\n}\n\n.snackbar__button-ok:hover, .snackbar__button-close:hover{\n    background: var(--snackbar-background-color-hover);\n}\n\n.snackbar__button-close {\n    background: var(--snackbar-background-color);\n    color : var(--snackbar-text-label-color);\n    border: none;\n    cursor: pointer;\n    font-size: 1rem;\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 50%;\n    padding: 0;\n}\n"],"names":[],"sourceRoot":""}
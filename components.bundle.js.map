{"version":3,"file":"components.bundle.js","mappings":"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","sources":["webpack://elsciUi/webpack/universalModuleDefinition","webpack://elsciUi/webpack/bootstrap","webpack://elsciUi/webpack/runtime/define property getters","webpack://elsciUi/webpack/runtime/hasOwnProperty shorthand","webpack://elsciUi/webpack/runtime/make namespace object","webpack://elsciUi/./src/utils.js","webpack://elsciUi/./src/SnackBar/SnackBar.js","webpack://elsciUi/./src/ValidationResult.js","webpack://elsciUi/./src/InputValidator.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"elsciUi\"] = factory();\n\telse\n\t\troot[\"elsciUi\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const KeyCode = Object.freeze({\n    \"Shift\": \"ShiftLeft\",\n    \"Esc\": \"Escape\",\n    \"Enter\": \"Enter\",\n    \"Up\": \"ArrowUp\",\n    \"Down\": \"ArrowDown\"\n});\n\n/**\n * @param {string} unsafe\n * @returns {string}\n */\nexport const safeText = (unsafe) => {\n    if (!unsafe)\n        return ''\n    return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\n/**\n * To be used when generating HTML via string interpolation e.g. {@code safeHtml`<div>${variables}</div>`} -\n * these variables will go through this function and have to be escaped should such string be shown on UI.\n *\n * @param {TemplateStringsArray} strings\n * @param {string[]} values\n * @returns {string}\n */\nexport const safeHtml = (strings, ...values) => {\n    let result = strings[0];\n    for (let i = 0; i < values.length; i++) {\n        result += safeText(String(values[i]));\n        result += strings[i + 1];\n    }\n    return result;\n}\n\n/* @param {String} text */\nexport function getTextWidth(text) {\n    const span = document.createElement(\"span\");\n    document.body.appendChild(span)\n    span.textContent = text;\n    span.style.fontSize = '1rem';\n    span.style.visibility = 'hidden';\n    span.style.position = 'absolute';\n    const width = Math.ceil(span.getBoundingClientRect().width) + 1;\n    span.remove();\n    return width;\n}\n\nfunction getCssStyle(element, prop) {\n    return window.getComputedStyle(element, null).getPropertyValue(prop);\n}\n\nexport function isFiniteNumber (value) {\n    if (typeof value !== 'undefined' && Number.isFinite(value)) {\n        return true\n    }\n   else return false\n}\n\n/**\n * Function that rounds a number to a specified number of decimal places.\n * @param {number} number\n * @param {number} decimalPlaces\n * @return {number}\n */\nexport function roundToDecimalPlaces(number, decimalPlaces) {\n    const multiplier = Math.pow(10, decimalPlaces);\n    return Math.round(number * multiplier) / multiplier;\n}","import {safeText} from \"../utils.js\";\n\nexport default class SnackBar {\n    /**\n     * SnackBar is a tiny notification displayed at the bottom of the screen. It's allowed to have only one SnackBar in\n     * the same time. Creating a new SnackBar will remove the old one. Default living time is 15 sec after which\n     * SnackBar disappears.\n     * Properties:\n     * - msgText - main text (e.g. Smth was deleted)\n     * - btnText - OK button text (e.g. Undo)\n     * - btnCb - function to be called when OK btn pressed\n     * - ttl - aka TimeToLive in milliseconds\n     */\n    /** @param {string} - needed in order to be able to create multiple snackbars on a page */\n    #snackBarId;\n    /** @param {number} - needed in order to delete the previous timeout when a new one appears */\n    #timeoutId;\n    /** @param {HTMLElement} */\n    #snackBarEl;\n    #onButtonClickCb = ()=>{}\n\n    /** @param {string} id */\n    constructor(id = 'snackBar') {\n        this.#snackBarId = id;\n    }\n\n    /**\n     * @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop\n     */\n    show(prop) {\n        SnackBar.#validateProperties(prop);\n        this.#onButtonClickCb = prop.btnCb;\n        this.#removeExistingIfNeeded();\n        this.#snackBarEl = this.#createSnackBarElement(this.#snackBarId, prop);\n        this.#setEventListeners();\n        this.#timeoutId = setTimeout(() => {\n            this.remove()\n        }, prop.ttl || 15 * 1000);\n    }\n\n    #getOkButton() {\n        return this.#snackBarEl.querySelector('[js-ok]');\n    }\n\n    #getCloseButton() {\n        return this.#snackBarEl.querySelector('[js-close]');\n    }\n\n    #getSnackbarEl() {\n        return document.getElementById(`${this.#snackBarId}`);\n    }\n\n    #removeExistingIfNeeded(){\n        const existing = this.#getSnackbarEl();\n        if (existing)\n            existing.remove();\n        if (this.#timeoutId)\n            window.clearTimeout(this.#timeoutId)\n    }\n\n    #setEventListeners() {\n        const okButton = this.#getOkButton();\n        if (okButton) {\n            okButton.addEventListener('click', () => {\n                this.remove();\n                this.#onButtonClickCb();\n            })\n        }\n        const closeButton = this.#getCloseButton();\n        closeButton.addEventListener('click', () => {this.remove()})\n    }\n\n    remove() {\n        this.#snackBarEl.remove();\n        const containerEl = SnackBar.#getSnackBarContainerEl();\n        if (containerEl.children.length === 0)\n            containerEl.remove();\n    }\n\n    /**\n     * @param {string} id\n     * @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop\n     * @return {HTMLDivElement}\n     */\n    #createSnackBarElement(id, prop) {\n        const containerEl = SnackBar.#getSnackBarContainerEl();\n        containerEl.insertAdjacentHTML(\"beforeend\", SnackBar.#htmlTemplate(prop.msgText, prop.btnText, this.#snackBarId));\n        return containerEl.lastElementChild;\n    }\n\n    /**\n     * @param {string} messageText\n     * @param {string?} buttonText\n     * @param {string} elementId\n     * @return {string}\n     */\n    static #htmlTemplate(messageText, buttonText, elementId) {\n        return `\n            <div id=\"${safeText(elementId)}\" class=\"snackbar\">\n                <div class=\"snackbar__label\">${safeText(messageText)}</div>\n                <div class=\"snackbar__buttons\">\n                    ${buttonText ? `<button class=\"snackbar__button-ok\" js-ok>${safeText(buttonText)}</button>` : ''}\n                    <button class=\"snackbar__button-close material-symbols-outlined\" js-close title=\"Close\">close</button>\n                </div>\n            </div>`\n    }\n\n    /** @param {{msgText:string, btnText:string, btnCb:function, ttl:number}} prop */\n    static #validateProperties(prop) {\n        if (!prop) throw new Error('No SnackBar properties');\n        if (!prop.msgText) throw new Error('Empty SnackBar message text');\n        if (prop.btnText && !prop.btnCb) throw new Error('No callback for SnackBar button');\n        if (!prop.btnText && prop.btnCb) throw new Error('No SnackBar button text');\n        if (prop.btnCb && (typeof prop.btnCb !== \"function\")) throw new Error('Callback for SnackBar button is not a function');\n        if (prop.ttl && (typeof prop.ttl !== \"number\")) throw new Error('TTL is not a number');\n    }\n\n    static #getSnackBarContainerEl(){\n        let container = document.body.querySelector(\".snackbar-container\");\n        if (!container){\n            document.body.insertAdjacentHTML(\"beforeend\", \"<div class='snackbar-container'/>\");\n            container = document.body.lastElementChild;\n        }\n        return container;\n    }\n}\n","export default class ValidationResult {\n    /** @type {boolean} */\n    #isValid;\n    /** @type {string} */\n    #errorMessage;\n\n    /**\n     * @param {boolean} isValid\n     * @param {string} errorMessage\n     */\n    constructor(isValid, errorMessage) {\n        this.#isValid = isValid;\n        this.#errorMessage = errorMessage;\n        this._isValid = isValid;\n        this._errorMessage = errorMessage;\n    }\n\n    get isValid() {\n        return this._isValid;\n    }\n\n    get errorMessage() {\n        return this._errorMessage;\n    }\n}","import ValidationResult from \"./ValidationResult.js\";\n\nexport default class InputValidator {\n\n    /** @type {function} */\n    #validatingFunction\n    /** @type {string} */\n    #errorMessage;\n\n    /**\n     * @param {function} validationFunction\n     * @param {string} errorMessage\n     */\n    constructor(validationFunction, errorMessage) {\n        this.#validatingFunction = validationFunction;\n        this.#errorMessage = errorMessage;\n    }\n\n    /**\n     * @param {TextInput} inputEl\n     * @param {*} valueToValidate\n     * @return {ValidationResult}\n     */\n    validate(inputEl, valueToValidate) {\n        return this.#validatingFunction(inputEl, valueToValidate)\n            ? new ValidationResult(true, \"\")\n            : new ValidationResult(false, this.#errorMessage);\n    }\n}"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","freeze","safeText","unsafe","replace","SnackBar","constructor","id","this","show","btnCb","setTimeout","remove","ttl","querySelector","document","getElementById","existing","window","clearTimeout","okButton","addEventListener","containerEl","children","length","insertAdjacentHTML","msgText","btnText","lastElementChild","messageText","buttonText","elementId","Error","container","body","ValidationResult","isValid","errorMessage","_isValid","_errorMessage","InputValidator","validationFunction","validate","inputEl","valueToValidate"],"sourceRoot":""}